[gd_scene load_steps=44 format=2]

[ext_resource path="res://scripts/Ground/ColoredPolygon_Circle.gd" type="Script" id=1]
[ext_resource path="res://scripts/Ground/BG_polygons.gd" type="Script" id=2]
[ext_resource path="res://scripts/Ground/ColoredPolygon_Poly.gd" type="Script" id=3]
[ext_resource path="res://scripts/Ground/ColoredPolygon_Rectangle.gd" type="Script" id=4]
[ext_resource path="res://Scenes/Interface_scenes/Shader.tscn" type="PackedScene" id=5]
[ext_resource path="res://Scenes/enemys/Spikes.tscn" type="PackedScene" id=6]
[ext_resource path="res://Scenes/Interactive_Objects/PhysicBTN2D.tscn" type="PackedScene" id=7]
[ext_resource path="res://Scenes/global/CheckPoint.tscn" type="PackedScene" id=8]
[ext_resource path="res://Scenes/player.tscn" type="PackedScene" id=9]
[ext_resource path="res://Scenes/Objects/Box_1.tscn" type="PackedScene" id=10]
[ext_resource path="res://Scenes/Interactive_Objects/Glass.tscn" type="PackedScene" id=11]
[ext_resource path="res://Scenes/enemys/Lezer.tscn" type="PackedScene" id=12]
[ext_resource path="res://Scenes/Interface_scenes/Game_HUD.tscn" type="PackedScene" id=13]
[ext_resource path="res://Scenes/Objects/Box_2.tscn" type="PackedScene" id=14]
[ext_resource path="res://Scenes/enemys/DashSpik.tscn" type="PackedScene" id=15]
[ext_resource path="res://Scenes/exit_portal.tscn" type="PackedScene" id=16]
[ext_resource path="res://Scenes/Levels/inside_levels/level_8/zones/level_8_zone_3.tscn" type="PackedScene" id=17]
[ext_resource path="res://scripts/Ground/BG_polygons_levels.gd" type="Script" id=18]
[ext_resource path="res://sprites/enemys/spiks.png" type="Texture" id=19]
[ext_resource path="res://Scenes/Levels/inside_levels/level_8/zones/level_8_zone_1.tscn" type="PackedScene" id=20]
[ext_resource path="res://Scenes/Levels/inside_levels/level_8/zones/level_8_zone_2.tscn" type="PackedScene" id=21]
[ext_resource path="res://Scenes/Levels/level_9.tscn" type="PackedScene" id=22]
[ext_resource path="res://scripts/zone_system/Object_Control.gd" type="Script" id=23]
[ext_resource path="res://scripts/zone_system/VisibilityObject.gd" type="Script" id=24]
[ext_resource path="res://scripts/zone_system/Zone_Control.gd" type="Script" id=25]
[ext_resource path="res://Scenes/Levels/inside_levels/level_8/zones/level_8_zone_4.tscn" type="PackedScene" id=26]

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 48, 10 )

[sub_resource type="RectangleShape2D" id=3]
extents = Vector2( 21.4651, 10 )

[sub_resource type="RectangleShape2D" id=4]
extents = Vector2( 136, 10 )

[sub_resource type="RectangleShape2D" id=1]
extents = Vector2( 52, 10 )

[sub_resource type="RectangleShape2D" id=8]
extents = Vector2( 224.152, 10 )

[sub_resource type="RectangleShape2D" id=9]
extents = Vector2( 223.749, 5.24487 )

[sub_resource type="RectangleShape2D" id=10]
extents = Vector2( 296.009, 10 )

[sub_resource type="RectangleShape2D" id=11]
extents = Vector2( 102.787, 10 )

[sub_resource type="RectangleShape2D" id=12]
extents = Vector2( 302.33, 10 )

[sub_resource type="RectangleShape2D" id=13]
extents = Vector2( 116, 21.9197 )

[sub_resource type="GDScript" id=14]
script/source = "extends CollisionPolygon2D

onready var parent = get_parent()

export var shard_poly_colors = Color(1,1,1,0.5)
export var is_complex = false

var tween = Tween.new()
var poly_color = Polygon2D.new()
var is_added : bool = false

onready var line_points: Array



# Called when the node enters the scene tree for the first time.
func _ready():
	randomize()
	poly_color.polygon = polygon
	poly_color.color = shard_poly_colors
	poly_color.color.a = 0.7
	add_child(poly_color)
	
	var poly_line = get_polygon()

	for i in range(0 , poly_line.size()):
		#draw_line(poly_line[i-1] , poly_line[i], OutLine , Width)
		line_points.append(poly_line[i])
	line_points.append(poly_line[0])
	line_points.append(poly_line[1])


func _draw():
	draw_polyline(line_points,Color(1,1,1,0.7),1)


func explode():
	var points = polygon
	var delaunay_points_one = Geometry.triangulate_polygon(points)
	
	if not delaunay_points_one:
		print(\"serious error occurred no delaunay points found\")
	#find the midlle point of each triangle and add it to points
	for index in len(delaunay_points_one) / 3:
		var shard_pool_one = PoolVector2Array()
		var Ox = 0
		var Oy = 0
		for n in range(3):
			shard_pool_one.append(points[delaunay_points_one[(index * 3) + n]])
			Ox += shard_pool_one[n].x
			Oy += shard_pool_one[n].y
		points.append(Vector2(Ox / 3, Oy / 3))
	
	var delaunay_points_two = Geometry.triangulate_delaunay_2d(points)
	
	if is_complex:
		delaunay_points_two = delaunay_points_one
	
	for index in len(delaunay_points_two) / 3:
		var shard_pool = PoolVector2Array()
		
		# loop over the three points in our triangle
		for n in range(3):
			shard_pool.append(points[delaunay_points_two[(index * 3) + n]])
		
		var shard_polygon = Polygon2D.new()
		var shard_collision_polygon = CollisionPolygon2D.new()
		var shard_rigidbody = RigidBody2D.new()

		
		shard_polygon.polygon = shard_pool
		shard_collision_polygon.polygon = shard_pool
		shard_rigidbody.applied_torque = round(rand_range(-1,1))
		shard_rigidbody.mass = 0.4
		shard_rigidbody.gravity_scale = 0.2
		shard_rigidbody.set_collision_layer_bit(0,false)
		shard_rigidbody.set_collision_mask_bit(0,false)
		shard_rigidbody.set_collision_layer_bit(2,true)
		shard_rigidbody.set_collision_mask_bit(2,true)
		shard_rigidbody.add_child(shard_polygon)
		shard_rigidbody.add_child(shard_collision_polygon)
		
		shard_polygon.color = shard_poly_colors
		
#		add_child(shard_rigidbody)
#		shard_polygon.add_child(tween)
		call_deferred(\"add_child\", shard_rigidbody)
		if is_added == false:
			call_deferred(\"add_child\", tween)
			is_added = true
		
		tween.interpolate_property(self, \"modulate\", Color(1,1,1,1), Color(1,1,1,0), 0.5, tween.TRANS_LINEAR, tween.EASE_OUT_IN)
		shard_rigidbody.apply_central_impulse(Vector2(5,0).rotated(deg2rad(rand_range(0,360))))
	
	yield(get_tree().create_timer(1), \"timeout\")
	tween.start()
	yield(get_tree().create_timer(0.5), \"timeout\")
	for ch in get_children():
		ch.queue_free()

func destroy_the_glass():
	for n in range(20):
		parent.set_collision_layer_bit(n, false)
		parent.set_collision_mask_bit(n, false)
	poly_color.hide()
	
	#Deleting the pinjoint conected to the glass before deleting the glass itself
	var twodots = \"../\"
	for child in get_parent().get_parent().get_children():
		if child.is_in_group(\"GlassPinJoint\"):
			if child.get_node_a() == twodots + get_parent().name or child.get_node_b() == twodots + get_parent().name:
				child.queue_free()
	
	explode()
	yield(get_tree().create_timer(5), \"timeout\")
	parent.queue_free()


func _on_RigidBody2D2_body_entered(body):
#	print(body.get_collision_layer_bit(9))
#	print(body.get_linear_velocity().length())
#	print(body.name)
	if parent.get_linear_velocity().length() > 40:
		destroy_the_glass()
	elif body.get_collision_layer_bit(9) == true && body.get_collision_mask_bit(9) == true:
		destroy_the_glass()
	elif body.get_collision_layer_bit(9) == true && body.get_linear_velocity().length() > 80:
		destroy_the_glass()
	elif body.get_collision_mask_bit(9) == true:
		destroy_the_glass()
"

[sub_resource type="GDScript" id=15]
script/source = "extends CollisionPolygon2D

onready var parent = get_parent()

export var shard_poly_colors = Color(1,1,1,0.5)
export var is_complex = false

var tween = Tween.new()
var poly_color = Polygon2D.new()
var is_added : bool = false

onready var line_points: Array



# Called when the node enters the scene tree for the first time.
func _ready():
	randomize()
	poly_color.polygon = polygon
	poly_color.color = shard_poly_colors
	poly_color.color.a = 0.7
	add_child(poly_color)
	
	var poly_line = get_polygon()

	for i in range(0 , poly_line.size()):
		#draw_line(poly_line[i-1] , poly_line[i], OutLine , Width)
		line_points.append(poly_line[i])
	line_points.append(poly_line[0])
	line_points.append(poly_line[1])


func _draw():
	draw_polyline(line_points,Color(1,1,1,0.7),1)


func explode():
	var points = polygon
	var delaunay_points_one = Geometry.triangulate_polygon(points)
	
	if not delaunay_points_one:
		print(\"serious error occurred no delaunay points found\")
	#find the midlle point of each triangle and add it to points
	for index in len(delaunay_points_one) / 3:
		var shard_pool_one = PoolVector2Array()
		var Ox = 0
		var Oy = 0
		for n in range(3):
			shard_pool_one.append(points[delaunay_points_one[(index * 3) + n]])
			Ox += shard_pool_one[n].x
			Oy += shard_pool_one[n].y
		points.append(Vector2(Ox / 3, Oy / 3))
	
	var delaunay_points_two = Geometry.triangulate_delaunay_2d(points)
	
	if is_complex:
		delaunay_points_two = delaunay_points_one
	
	for index in len(delaunay_points_two) / 3:
		var shard_pool = PoolVector2Array()
		
		# loop over the three points in our triangle
		for n in range(3):
			shard_pool.append(points[delaunay_points_two[(index * 3) + n]])
		
		var shard_polygon = Polygon2D.new()
		var shard_collision_polygon = CollisionPolygon2D.new()
		var shard_rigidbody = RigidBody2D.new()

		
		shard_polygon.polygon = shard_pool
		shard_collision_polygon.polygon = shard_pool
		shard_rigidbody.applied_torque = round(rand_range(-1,1))
		shard_rigidbody.mass = 0.4
		shard_rigidbody.gravity_scale = 0.2
		shard_rigidbody.set_collision_layer_bit(0,false)
		shard_rigidbody.set_collision_mask_bit(0,false)
		shard_rigidbody.set_collision_layer_bit(2,true)
		shard_rigidbody.set_collision_mask_bit(2,true)
		shard_rigidbody.add_child(shard_polygon)
		shard_rigidbody.add_child(shard_collision_polygon)
		
		shard_polygon.color = shard_poly_colors
		
#		add_child(shard_rigidbody)
#		shard_polygon.add_child(tween)
		call_deferred(\"add_child\", shard_rigidbody)
		if is_added == false:
			call_deferred(\"add_child\", tween)
			is_added = true
		
		tween.interpolate_property(self, \"modulate\", Color(1,1,1,1), Color(1,1,1,0), 0.5, tween.TRANS_LINEAR, tween.EASE_OUT_IN)
		shard_rigidbody.apply_central_impulse(Vector2(5,0).rotated(deg2rad(rand_range(0,360))))
	
	yield(get_tree().create_timer(1), \"timeout\")
	tween.start()
	yield(get_tree().create_timer(0.5), \"timeout\")
	for ch in get_children():
		ch.queue_free()

func destroy_the_glass():
	for n in range(20):
		parent.set_collision_layer_bit(n, false)
		parent.set_collision_mask_bit(n, false)
	poly_color.hide()
	
	#Deleting the pinjoint conected to the glass before deleting the glass itself
	var twodots = \"../\"
	for child in get_parent().get_parent().get_children():
		if child.is_in_group(\"GlassPinJoint\"):
			if child.get_node_a() == twodots + get_parent().name or child.get_node_b() == twodots + get_parent().name:
				child.queue_free()
	
	explode()
	yield(get_tree().create_timer(5), \"timeout\")
	parent.queue_free()


func _on_RigidBody2D2_body_entered(body):
#	print(body.get_collision_layer_bit(9))
#	print(body.get_linear_velocity().length())
#	print(body.name)
	if parent.get_linear_velocity().length() > 40:
		destroy_the_glass()
	elif body.get_collision_layer_bit(9) == true && body.get_collision_mask_bit(9) == true:
		destroy_the_glass()
	elif body.get_collision_layer_bit(9) == true && body.get_linear_velocity().length() > 80:
		destroy_the_glass()
	elif body.get_collision_mask_bit(9) == true:
		destroy_the_glass()
"

[sub_resource type="GDScript" id=16]
script/source = "extends CollisionPolygon2D

onready var parent = get_parent()

export var shard_poly_colors = Color(1,1,1,0.5)
export var is_complex = false

var tween = Tween.new()
var poly_color = Polygon2D.new()
var is_added : bool = false

onready var line_points: Array



# Called when the node enters the scene tree for the first time.
func _ready():
	randomize()
	poly_color.polygon = polygon
	poly_color.color = shard_poly_colors
	poly_color.color.a = 0.7
	add_child(poly_color)
	
	var poly_line = get_polygon()

	for i in range(0 , poly_line.size()):
		#draw_line(poly_line[i-1] , poly_line[i], OutLine , Width)
		line_points.append(poly_line[i])
	line_points.append(poly_line[0])
	line_points.append(poly_line[1])


func _draw():
	draw_polyline(line_points,Color(1,1,1,0.7),1)


func explode():
	var points = polygon
	var delaunay_points_one = Geometry.triangulate_polygon(points)
	
	if not delaunay_points_one:
		print(\"serious error occurred no delaunay points found\")
	#find the midlle point of each triangle and add it to points
	for index in len(delaunay_points_one) / 3:
		var shard_pool_one = PoolVector2Array()
		var Ox = 0
		var Oy = 0
		for n in range(3):
			shard_pool_one.append(points[delaunay_points_one[(index * 3) + n]])
			Ox += shard_pool_one[n].x
			Oy += shard_pool_one[n].y
		points.append(Vector2(Ox / 3, Oy / 3))
	
	var delaunay_points_two = Geometry.triangulate_delaunay_2d(points)
	
	if is_complex:
		delaunay_points_two = delaunay_points_one
	
	for index in len(delaunay_points_two) / 3:
		var shard_pool = PoolVector2Array()
		
		# loop over the three points in our triangle
		for n in range(3):
			shard_pool.append(points[delaunay_points_two[(index * 3) + n]])
		
		var shard_polygon = Polygon2D.new()
		var shard_collision_polygon = CollisionPolygon2D.new()
		var shard_rigidbody = RigidBody2D.new()

		
		shard_polygon.polygon = shard_pool
		shard_collision_polygon.polygon = shard_pool
		shard_rigidbody.applied_torque = round(rand_range(-1,1))
		shard_rigidbody.mass = 0.4
		shard_rigidbody.gravity_scale = 0.2
		shard_rigidbody.set_collision_layer_bit(0,false)
		shard_rigidbody.set_collision_mask_bit(0,false)
		shard_rigidbody.set_collision_layer_bit(2,true)
		shard_rigidbody.set_collision_mask_bit(2,true)
		shard_rigidbody.add_child(shard_polygon)
		shard_rigidbody.add_child(shard_collision_polygon)
		
		shard_polygon.color = shard_poly_colors
		
#		add_child(shard_rigidbody)
#		shard_polygon.add_child(tween)
		call_deferred(\"add_child\", shard_rigidbody)
		if is_added == false:
			call_deferred(\"add_child\", tween)
			is_added = true
		
		tween.interpolate_property(self, \"modulate\", Color(1,1,1,1), Color(1,1,1,0), 0.5, tween.TRANS_LINEAR, tween.EASE_OUT_IN)
		shard_rigidbody.apply_central_impulse(Vector2(5,0).rotated(deg2rad(rand_range(0,360))))
	
	yield(get_tree().create_timer(1), \"timeout\")
	tween.start()
	yield(get_tree().create_timer(0.5), \"timeout\")
	for ch in get_children():
		ch.queue_free()

func destroy_the_glass():
	for n in range(20):
		parent.set_collision_layer_bit(n, false)
		parent.set_collision_mask_bit(n, false)
	poly_color.hide()
	
	#Deleting the pinjoint conected to the glass before deleting the glass itself
	var twodots = \"../\"
	for child in get_parent().get_parent().get_children():
		if child.is_in_group(\"GlassPinJoint\"):
			if child.get_node_a() == twodots + get_parent().name or child.get_node_b() == twodots + get_parent().name:
				child.queue_free()
	
	explode()
	yield(get_tree().create_timer(5), \"timeout\")
	parent.queue_free()


func _on_RigidBody2D2_body_entered(body):
#	print(body.get_collision_layer_bit(9))
#	print(body.get_linear_velocity().length())
#	print(body.name)
	if parent.get_linear_velocity().length() > 40:
		destroy_the_glass()
	elif body.get_collision_layer_bit(9) == true && body.get_collision_mask_bit(9) == true:
		destroy_the_glass()
	elif body.get_collision_layer_bit(9) == true && body.get_linear_velocity().length() > 80:
		destroy_the_glass()
	elif body.get_collision_mask_bit(9) == true:
		destroy_the_glass()
"

[sub_resource type="RectangleShape2D" id=17]
extents = Vector2( 1, 1 )

[sub_resource type="GDScript" id=18]
script/source = "extends CollisionPolygon2D

onready var parent = get_parent()

export var shard_poly_colors = Color(1,1,1,0.5)
export var is_complex = false

var tween = Tween.new()
var poly_color = Polygon2D.new()
var is_added : bool = false

onready var line_points: Array



# Called when the node enters the scene tree for the first time.
func _ready():
	randomize()
	poly_color.polygon = polygon
	poly_color.color = shard_poly_colors
	poly_color.color.a = 0.7
	add_child(poly_color)
	
	var poly_line = get_polygon()

	for i in range(0 , poly_line.size()):
		#draw_line(poly_line[i-1] , poly_line[i], OutLine , Width)
		line_points.append(poly_line[i])
	line_points.append(poly_line[0])
	line_points.append(poly_line[1])


func _draw():
	draw_polyline(line_points,Color(1,1,1,0.7),1)


func explode():
	var points = polygon
	var delaunay_points_one = Geometry.triangulate_polygon(points)
	
	if not delaunay_points_one:
		print(\"serious error occurred no delaunay points found\")
	#find the midlle point of each triangle and add it to points
	for index in len(delaunay_points_one) / 3:
		var shard_pool_one = PoolVector2Array()
		var Ox = 0
		var Oy = 0
		for n in range(3):
			shard_pool_one.append(points[delaunay_points_one[(index * 3) + n]])
			Ox += shard_pool_one[n].x
			Oy += shard_pool_one[n].y
		points.append(Vector2(Ox / 3, Oy / 3))
	
	var delaunay_points_two = Geometry.triangulate_delaunay_2d(points)
	
	if is_complex:
		delaunay_points_two = delaunay_points_one
	
	for index in len(delaunay_points_two) / 3:
		var shard_pool = PoolVector2Array()
		
		# loop over the three points in our triangle
		for n in range(3):
			shard_pool.append(points[delaunay_points_two[(index * 3) + n]])
		
		var shard_polygon = Polygon2D.new()
		var shard_collision_polygon = CollisionPolygon2D.new()
		var shard_rigidbody = RigidBody2D.new()

		
		shard_polygon.polygon = shard_pool
		shard_collision_polygon.polygon = shard_pool
		shard_rigidbody.applied_torque = round(rand_range(-1,1))
		shard_rigidbody.mass = 0.4
		shard_rigidbody.gravity_scale = 0.2
		shard_rigidbody.set_collision_layer_bit(0,false)
		shard_rigidbody.set_collision_mask_bit(0,false)
		shard_rigidbody.set_collision_layer_bit(2,true)
		shard_rigidbody.set_collision_mask_bit(2,true)
		shard_rigidbody.add_child(shard_polygon)
		shard_rigidbody.add_child(shard_collision_polygon)
		
		shard_polygon.color = shard_poly_colors
		
#		add_child(shard_rigidbody)
#		shard_polygon.add_child(tween)
		call_deferred(\"add_child\", shard_rigidbody)
		if is_added == false:
			call_deferred(\"add_child\", tween)
			is_added = true
		
		tween.interpolate_property(self, \"modulate\", Color(1,1,1,1), Color(1,1,1,0), 0.5, tween.TRANS_LINEAR, tween.EASE_OUT_IN)
		shard_rigidbody.apply_central_impulse(Vector2(5,0).rotated(deg2rad(rand_range(0,360))))
	
	yield(get_tree().create_timer(1), \"timeout\")
	tween.start()
	yield(get_tree().create_timer(0.5), \"timeout\")
	for ch in get_children():
		ch.queue_free()

func destroy_the_glass():
	for n in range(20):
		parent.set_collision_layer_bit(n, false)
		parent.set_collision_mask_bit(n, false)
	poly_color.hide()
	
	#Deleting the pinjoint conected to the glass before deleting the glass itself
	var twodots = \"../\"
	for child in get_parent().get_parent().get_children():
		if child.is_in_group(\"GlassPinJoint\"):
			if child.get_node_a() == twodots + get_parent().name or child.get_node_b() == twodots + get_parent().name:
				child.queue_free()
	
	explode()
	yield(get_tree().create_timer(5), \"timeout\")
	parent.queue_free()


func _on_RigidBody2D2_body_entered(body):
#	print(body.get_collision_layer_bit(9))
#	print(body.get_linear_velocity().length())
#	print(body.name)
	if parent.get_linear_velocity().length() > 40:
		destroy_the_glass()
	elif body.get_collision_layer_bit(9) == true && body.get_collision_mask_bit(9) == true:
		destroy_the_glass()
	elif body.get_collision_layer_bit(9) == true && body.get_linear_velocity().length() > 80:
		destroy_the_glass()
	elif body.get_collision_mask_bit(9) == true:
		destroy_the_glass()
"

[sub_resource type="RectangleShape2D" id=19]
extents = Vector2( 1, 15 )

[sub_resource type="RectangleShape2D" id=20]
extents = Vector2( 8, 8 )

[node name="level_001" type="Node"]
__meta__ = {
"_edit_horizontal_guides_": [ -710.007 ],
"_edit_vertical_guides_": [ 937.766 ]
}

[node name="BG_polygons" type="Node2D" parent="."]
z_index = -10
script = ExtResource( 18 )

[node name="blank" type="Polygon2D" parent="BG_polygons" groups=[
"bg_back",
]]
color = Color( 0.254902, 0.254902, 0.254902, 1 )
polygon = PoolVector2Array( 183.757, 28.946, 122.513, 28.946, 118.945, -7.32478, 85.053, -7.32478, 87.4314, -99.4883, 168.892, -169.652, 221.101, -173.075, 225.868, -192.146, 257.652, -191.616, 259.771, -168.838, 328.106, -169.367, 331.285, -230.816, 380.02, -231.346, 377.371, -130.167, 277.782, -129.638, 275.133, -8.32901, 182.43, -10.9777 )

[node name="blank2" type="Polygon2D" parent="BG_polygons" groups=[
"bg_back",
]]
color = Color( 0.254902, 0.254902, 0.254902, 1 )
polygon = PoolVector2Array( 336, -223, 230, -225.5, 230.5, -256, 249, -258, 253.226, -356.622, 294.757, -456.673, 391.976, -584.096, 516.567, -673.764, 701.566, -729.452, 719.105, -755.269, 737.906, -756.111, 746.324, -730.856, 976.326, -732.183, 981.938, -219.218 )

[node name="light" type="Polygon2D" parent="BG_polygons" groups=[
"bg_mid",
]]
color = Color( 0.196078, 0.196078, 0.196078, 1 )
polygon = PoolVector2Array( 340.75, -233, 349.25, -229.25, 350.624, -209.332, 346.25, -206, 350.25, -201.5, 349, -176.75, 346.815, -173.721, 350, -169.5, 342.493, -152.41, 337.72, -155.062, 335.5, -151, 310.75, -152.25, 306.607, -156.122, 303.602, -150.642, 269.13, -153.824, 266.125, -157.183, 262.766, -152.057, 237.5, -154.25, 234.129, -157.183, 230.063, -152.233, 205.491, -153.117, 201.248, -156.653, 198.95, -153.117, 172.787, -148.167, 166.6, -149.228, 167.661, -144.455, 149.983, -125.363, 144.918, -125.775, 146.094, -121.121, 128.25, -106.25, 122.229, -106.448, 124.35, -100.261, 107.203, -83.8208, 103.902, -81.9496, 107.38, -77.2801, 110.208, -55.3598, 105.026, -49.5487, 109.678, -47.7584, 113.625, -29.125, 113.375, -24.375, 118, -27.625, 136.5, -22.875, 135.875, -18.75, 140.5, -18.75, 144, -1, 140.25, 5.75, 144.125, 4, 159.5, 3.375, 164.25, 4.5, 160.75, -1.75, 165.375, -22.875, 170.875, -20.875, 170.875, -27, 191.5, -28.75, 195.625, -25.5, 198.25, -29.5, 220.87, -32.5555, 225.643, -27.6057, 228.825, -32.2019, 247.21, -30.6109, 252.337, -27.4289, 250.569, -34.1465, 254.25, -55.25, 258.04, -59.8495, 253, -65.75, 251.453, -94.4273, 259.75, -96, 255, -102.25, 254.635, -129.429, 259.938, -131.55, 256.355, -137.762, 276.732, -147.991, 282.75, -144, 286.101, -148.521, 311.979, -147.313, 315.725, -144.317, 320.219, -148.521, 347, -147, 352.746, -144.455, 350.448, -151.173, 356, -173.25, 358.579, -175.568, 355.25, -180.25, 355.397, -206.327, 359.998, -209.615, 355.928, -214.282, 358.75, -230.25, 366.528, -233.647, 374.67, -137.035, 274.506, -130.735, 271.986, -11.6726, 181.902, -9.78268, 181.902, 25.4951, 122.055, 28.0149, 117.646, -6.00293, 92.4473, -6.63289, 96.2271, -105.537, 166.153, -169.163, 216.55, -176.092, 224.739, -190.581, 261.907, -188.062, 271.986, -177.352, 333.092, -172.313 )

[node name="light2" type="Polygon2D" parent="BG_polygons" groups=[
"bg_mid",
]]
color = Color( 0.196078, 0.196078, 0.196078, 1 )
polygon = PoolVector2Array( 358.766, -230.242, 375.292, -268.735, 476.212, -281.753, 498.484, -265.716, 507.393, -289.771, 637.464, -287.989, 653.567, -259.221, 664.269, -286.573, 795.082, -275.87, 819.913, -268.592, 830.758, -283.005, 900.922, -312.735, 919.879, -312.934, 912.814, -365.06, 921.054, -463.792, 934.539, -474.28, 911.624, -495.873, 912.814, -585.064, 931.762, -605.138, 899.058, -603.135, 865.687, -658.531, 857.678, -686.563, 842.651, -670.687, 720.162, -655.227, 697.567, -676.633, 686.864, -651.659, 562.679, -612.479, 536.649, -633.169, 538.214, -608.848, 458.561, -517.706, 426.681, -528.248, 436.536, -507.027, 358.643, -418.575, 337.957, -414.039, 340.805, -395.98, 310.703, -315.044, 289.347, -296.999, 309, -291.329, 352.259, -264.522, 349.234, -229.25, 229.02, -217.599, 230.209, -255.653, 249.236, -260.41, 242.101, -357.925, 311.075, -482.792, 407.401, -596.956, 508.483, -676.633, 688.054, -728.958, 972.274, -724.201, 978.22, -222.356 )

[node name="dark" type="Polygon2D" parent="BG_polygons" groups=[
"bg_front",
]]
color = Color( 0.172549, 0.172549, 0.172549, 1 )
polygon = PoolVector2Array( 340.501, -231.893, 346.355, -228.107, 346.65, -215.21, 343.829, -213.234, 346.074, -212.112, 345.513, -200.466, 344.197, -198.04, 347.056, -196.116, 347.502, -184.643, 343.97, -183.489, 346.355, -180.402, 345.612, -168.973, 343.643, -167.555, 345.373, -164.968, 341.584, -157.111, 339.199, -158.233, 339.059, -156.409, 330.079, -155.006, 328.255, -157.672, 327.133, -154.726, 315.908, -155.848, 315.347, -158.233, 313.382, -155.988, 301.877, -157.251, 300.193, -159.636, 299.071, -157.251, 287.987, -155.427, 286.724, -157.812, 285.602, -155.708, 273.675, -156.971, 272.833, -160.478, 271.43, -157.532, 261.749, -157.672, 260.206, -160.057, 259.645, -156.69, 247.578, -156.971, 246.315, -160.198, 244.912, -156.409, 233.547, -157.953, 232.004, -160.198, 230.461, -157.251, 221.481, -155.708, 219.236, -159.356, 217.693, -155.988, 205.486, -155.988, 204.083, -159.216, 202.118, -156.83, 189.912, -157.812, 187.947, -159.777, 187.807, -156.129, 178.406, -153.463, 174.337, -155.147, 173.636, -152.902, 165.358, -150.096, 162.427, -150.781, 164.235, -147.43, 158.904, -141.677, 156.079, -141.426, 156.799, -138.59, 149.363, -133.118, 145.574, -133.259, 146.977, -131.014, 141.926, -122.736, 138.699, -123.016, 138.559, -120.491, 130.421, -115.44, 128.176, -116.001, 130.032, -112.582, 120.188, -106.44, 117.747, -107.464, 118.916, -103.513, 114.283, -97.6206, 111.605, -98.5656, 113.023, -95.5733, 105.867, -90.0438, 102.78, -90.0438, 104.203, -88.0925, 101.798, -77.2758, 99.834, -76.0131, 103.482, -74.4697, 105.587, -66.4721, 103.342, -63.8063, 106.428, -62.2629, 104.885, -53.4235, 102.36, -52.0204, 104.745, -50.3367, 105.655, -43.2607, 104.184, -40.7958, 107.13, -40.0943, 108.252, -31.5355, 105.301, -27.4508, 108.393, -26.3441, 113.724, -22.4155, 115.548, -20.0303, 117.092, -22.8364, 126.185, -22.4955, 127.334, -20.3109, 130.421, -21.4333, 136.735, -14.9792, 134.911, -11.6118, 137.577, -10.77, 138.84, 1.29652, 135.051, 3.26083, 138.455, 4.52292, 140.523, 11.6793, 141.365, 15.187, 143.47, 11.6793, 152.029, 9.85529, 153.853, 11.539, 154.694, 8.1716, 164.937, 8.87314, 167.322, 10.5568, 166.2, 6.20729, 166.901, -4.73672, 169.848, -5.15764, 165.919, -9.08626, 168.445, -18.4869, 171.11, -18.2063, 172.654, -21.4333, 182.896, -23.2573, 185.141, -21.293, 186.404, -23.2573, 197.067, -22.4155, 198.611, -20.7318, 200.996, -24.2395, 211.238, -25.2217, 212.782, -22.6961, 214.886, -24.6604, 224.287, -23.538, 225.69, -21.4334, 227.514, -23.9589, 237.616, -25.6426, 240.282, -22.5558, 242.527, -25.5023, 252.349, -25.0814, 256.277, -23.538, 254.032, -27.7472, 256.698, -35.8851, 259.645, -37.1478, 256.979, -39.3927, 256.558, -48.6531, 259.645, -50.1964, 257.961, -53.0026, 259.176, -62.5628, 261.428, -64.5493, 257.985, -67.5953, 255.733, -79.2494, 258.249, -80.4413, 255.733, -84.017, 259.176, -94.6116, 261.295, -94.8765, 258.912, -99.3792, 257.985, -109.577, 260.501, -110.239, 257.72, -113.285, 260.766, -123.879, 263.679, -124.541, 261.03, -127.985, 262.09, -136.99, 264.474, -137.387, 264.341, -140.566, 271.758, -144.009, 275.466, -142.023, 275.863, -144.274, 285.795, -143.082, 286.987, -141.36, 290.431, -143.877, 297.979, -143.479, 299.966, -142.023, 302.614, -145.069, 309.766, -143.877, 311.355, -141.758, 312.282, -143.479, 324.634, -144.609, 325.923, -141.36, 327.379, -143.479, 337.577, -144.936, 339.563, -142.817, 343.006, -145.996, 351.077, -144.11, 354.661, -142.287, 353.469, -146.525, 357.044, -153.942, 359.561, -154.074, 357.177, -158.047, 358.634, -167.185, 362.153, -167.734, 360.62, -170.76, 359.163, -182.15, 360.855, -184.37, 358.236, -187.447, 357.044, -197.644, 361.15, -198.969, 359.031, -201.352, 361.017, -212.08, 362.871, -213.404, 360.488, -217.907, 362.81, -230.56, 367.37, -233.226, 374.5, -133, 268, -134, 271, -13, 181, -10.5, 178.5, 24.5, 123.5, 22.5, 122, -8.5, 92, -10, 91, -101, 166, -172.5, 220, -174.5, 228, -189.5, 252, -190, 256.5, -170.5, 334, -172 )

[node name="dark2" type="Polygon2D" parent="BG_polygons" groups=[
"bg_front",
]]
color = Color( 0.172549, 0.172549, 0.172549, 1 )
polygon = PoolVector2Array( 362.832, -230.482, 374.251, -252.985, 426.802, -261.918, 434.319, -249.982, 442.153, -264.588, 501.553, -259.248, 506.734, -248.313, 520.416, -260.66, 570.473, -268.669, 580.309, -255.911, 586.316, -269.26, 647.718, -261.918, 660.908, -248.313, 667.248, -257.657, 711.791, -268.592, 720.308, -254.32, 727.141, -266.59, 770.524, -269.927, 780.535, -250.572, 785.715, -262.663, 838.601, -267.257, 844.448, -247.646, 854.46, -261.328, 895.999, -279.271, 914.686, -270.594, 908.854, -286.356, 935.551, -324.065, 948.725, -326.658, 939.89, -338.415, 947.39, -387.393, 961.406, -396.737, 946.385, -409.117, 939.034, -468.286, 960.01, -481.022, 944.887, -486.28, 938.894, -554.453, 959.87, -571.683, 942.639, -583.67, 936.646, -639.856, 951.947, -657.086, 920.914, -654.09, 877.38, -683.515, 874.549, -699.561, 860.391, -690.594, 794.792, -680.683, 781.105, -692.482, 770.723, -678.324, 699.165, -684.805, 683.432, -698.29, 682.683, -678.812, 636.985, -657.087, 620.175, -665.581, 613.568, -649.064, 544.839, -642.104, 531.354, -653.341, 532.103, -639.107, 504.385, -600.151, 488.033, -606.589, 493.224, -588.184, 445.951, -549.958, 429.469, -560.446, 431.717, -543.215, 409.219, -507.01, 388.926, -507.482, 398.836, -489.549, 353.055, -448.073, 333.578, -451.819, 348.811, -430.557, 308.855, -382.896, 289.347, -379.116, 307.281, -366.373, 286.515, -295.583, 276.133, -286.616, 289.719, -284.869, 319.149, -261.649, 317.497, -251.739, 330.004, -255.75, 346.362, -228.012, 224.95, -224.076, 230.943, -254.042, 245.927, -262.283, 257.832, -372.357, 301.27, -466.649, 392.384, -578.952, 506.806, -669.006, 686.915, -728.336, 729.86, -761.584, 757.892, -734.219, 978.343, -727.974, 978.343, -222.386 )

[node name="dark3" type="Polygon2D" parent="BG_polygons" groups=[
"bg_front",
]]
color = Color( 0.172549, 0.172549, 0.172549, 1 )
polygon = PoolVector2Array( 488, -254, 500.804, -330.98, 590.78, -423.478, 619, -481, 701, -540, 708, -590, 700.08, -582.004, 691.464, -546.419, 642.395, -519.075, 634, -534, 659.251, -591.368, 640, -635, 636.776, -625.08, 645.766, -592.117, 614.676, -533.683, 627.037, -510.459, 601, -496, 580, -452, 551, -459, 522.703, -506.742, 575.881, -548.014, 571.119, -583.334, 585.834, -608.224, 585, -620, 563, -585, 563, -555, 499.686, -512.694, 528.656, -439.674, 560.007, -428.959, 469, -345, 454, -256 )

[node name="dark4" type="Polygon2D" parent="BG_polygons" groups=[
"bg_front",
]]
color = Color( 0.172549, 0.172549, 0.172549, 1 )
polygon = PoolVector2Array( 631.82, -253.485, 649.678, -298.726, 625.47, -279.677, 619.914, -294.757, 611.977, -279.28, 589.357, -300.71, 601.659, -256.66 )

[node name="dark5" type="Polygon2D" parent="BG_polygons" groups=[
"bg_front",
]]
color = Color( 0.172549, 0.172549, 0.172549, 1 )
polygon = PoolVector2Array( 360.667, -473.502, 368.159, -421.81, 375.65, -451.776, 396.626, -439.79, 391.382, -462.264, 418.352, -457.02, 407.115, -477.248, 440.826, -486.237, 375.65, -495.227 )

[node name="dark6" type="Polygon2D" parent="BG_polygons" groups=[
"bg_front",
]]
color = Color( 0.172549, 0.172549, 0.172549, 1 )
polygon = PoolVector2Array( 843.005, -697.755, 867.753, -655.328, 841.59, -670.885, 833.105, -648.964, 823.913, -669.47, 806.942, -643.307, 804.114, -695.633 )

[node name="dark7" type="Polygon2D" parent="BG_polygons" groups=[
"bg_front",
]]
color = Color( 0.172549, 0.172549, 0.172549, 1 )
polygon = PoolVector2Array( 678.415, -539.849, 678.854, -473.67, 660.208, -468.671, 661.714, -411.04, 633, -451.5, 639.381, -471.587, 617.951, -448.967, 653, -402, 657.265, -356.542, 638.048, -314.016, 642.232, -316.328, 642.413, -312.374, 645.203, -314.998, 646.045, -309.386, 660.208, -347.27, 672.936, -321.107, 678.237, -347.256, 694.519, -313.049, 700.9, -303.349, 697.823, -313.993, 701.598, -315.645, 679.164, -359.354, 672.618, -463.628, 678.977, -469.432, 678.989, -468.439, 681.745, -470.407, 681.782, -471.27, 686.65, -475.403, 681.723, -474.19, 681.014, -541.62 )

[node name="dark8" type="Polygon2D" parent="BG_polygons" groups=[
"bg_front",
]]
color = Color( 0.172549, 0.172549, 0.172549, 1 )
polygon = PoolVector2Array( 196.131, -20.9735, 197.311, -34.4237, 206.213, -42.8661, 204.432, -60.158, 209.187, -67.9168, 208.882, -70.2303, 202.208, -60.3859, 202.346, -50.981, 196.702, -54.7128, 196.673, -65.9979, 190.195, -73.9011, 190.583, -70.9202, 194.533, -65.2247, 194.032, -53.5448, 202.012, -47.8942, 202.208, -44.3678, 196.013, -38.1992, 188.693, -46.0363, 188.831, -57.6552, 184.493, -66.9991, 186.662, -75.4252, 185.856, -77.2382, 182.352, -66.5595, 185.856, -57.0487, 185.744, -52.8998, 180.017, -55.5471, 178.653, -65.9979, 174.231, -72.9224, 175.9, -75.8424, 175.511, -77.9056, 172.341, -72.9, 176.65, -65.4139, 176.984, -54.4015, 185.577, -49.3959, 185.661, -43.7228, 193.169, -35.6303, 191.53, -20.8412 )

[node name="dark9" type="Polygon2D" parent="BG_polygons" groups=[
"bg_front",
]]
color = Color( 0.172549, 0.172549, 0.172549, 1 )
polygon = PoolVector2Array( 181.734, -21.1707, 181.512, -27.0729, 179.507, -24.7343, 177.28, -26.5161, 176.166, -23.7321, 173.493, -24.957, 176.389, -20.0571 )

[node name="dark10" type="Polygon2D" parent="BG_polygons" groups=[
"bg_front",
]]
color = Color( 0.172549, 0.172549, 0.172549, 1 )
polygon = PoolVector2Array( 208.907, -22.6184, 210.688, -29.1888, 207.904, -27.0729, 206.568, -28.7434, 206.234, -26.6275, 204.007, -27.9638, 203.561, -26.5161, 200.554, -27.407, 203.673, -22.173 )

[node name="dark11" type="Polygon2D" parent="BG_polygons" groups=[
"bg_front",
]]
color = Color( 0.172549, 0.172549, 0.172549, 1 )
polygon = PoolVector2Array( 102.828, -67.3074, 108.846, -66.8355, 106.604, -69.9031, 107.902, -70.9649, 106.014, -72.2628, 107.43, -75.9203, 102.003, -72.0268 )

[node name="dark12" type="Polygon2D" parent="BG_polygons" groups=[
"bg_front",
]]
color = Color( 0.172549, 0.172549, 0.172549, 1 )
polygon = PoolVector2Array( 267.207, -140.915, 261.868, -144.086, 265.539, -144.002, 265.706, -145.671, 267.207, -144.753, 267.624, -147.256, 269.794, -145.671, 271.379, -149.759, 271.879, -142.334 )

[node name="noor" type="Polygon2D" parent="BG_polygons" groups=[
"bg_light",
]]
color = Color( 1, 1, 1, 0.117647 )
polygon = PoolVector2Array( 151.664, -151.524, 311.674, -100.497, 282.065, -12.9325, 181.272, -6.00295, 180.012, 28.0149, 148.514, 26.755, 111.346, -112.466 )

[node name="noor2" type="Polygon2D" parent="BG_polygons" groups=[
"bg_light",
]]
color = Color( 1, 1, 1, 0.117647 )
polygon = PoolVector2Array( 620.316, -704.521, 976.856, -268.937, 978.538, -221.847, 588.362, -220.165, 551.362, -680.976 )

[node name="CanvasLayer" type="CanvasLayer" parent="."]
layer = 111

[node name="Game_HUD" parent="CanvasLayer" instance=ExtResource( 13 )]

[node name="Shader" parent="." instance=ExtResource( 5 )]

[node name="player" parent="." instance=ExtResource( 9 )]

[node name="PlayerRigidBody" parent="player" index="1"]
position = Vector2( 153.426, 9.65721 )

[node name="Ground" type="Node2D" parent="."]

[node name="StaticBodyRect" type="StaticBody2D" parent="Ground"]
collision_layer = 68
collision_mask = 64
script = ExtResource( 4 )

[node name="CollisionShape2D29" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 83.9988, -7.95369 )
shape = SubResource( 2 )

[node name="CollisionShape2D26" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 728.288, -758.168 )
shape = SubResource( 3 )

[node name="CollisionShape2D17" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 328, -8 )
shape = SubResource( 4 )

[node name="CollisionShape2D3" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 290, -224 )
shape = SubResource( 1 )

[node name="CollisionShape2D10" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 247.98, -301.454 )
rotation = 1.5708
shape = SubResource( 1 )

[node name="CollisionShape2D12" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 487.53, -656.025 )
rotation = -0.575959
shape = SubResource( 1 )

[node name="CollisionShape2D5" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 374, -562 )
rotation = -0.910882
shape = SubResource( 8 )

[node name="CollisionShape2D11" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 932.485, -442.613 )
rotation = -1.5708
shape = SubResource( 9 )

[node name="CollisionShape2D28" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 977.211, -510.288 )
rotation = -1.5708
shape = SubResource( 10 )

[node name="CollisionShape2D13" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 593.504, -699.892 )
rotation = -0.315983
shape = SubResource( 11 )

[node name="CollisionShape2D15" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 266.728, -393.315 )
rotation = -1.1689
shape = SubResource( 11 )

[node name="CollisionShape2D14" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 404.577, -591.256 )
rotation = -0.694053
shape = SubResource( 11 )

[node name="CollisionShape2D6" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 668.118, -224 )
shape = SubResource( 12 )

[node name="CollisionShape2D8" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 852, -732 )
shape = SubResource( 13 )

[node name="CollisionShape2D9" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 604, -732 )
shape = SubResource( 13 )

[node name="StaticBodyCircle" type="StaticBody2D" parent="Ground"]
collision_layer = 68
collision_mask = 68
script = ExtResource( 1 )

[node name="StaticBodypoly" type="StaticBody2D" parent="Ground"]
collision_layer = 68
collision_mask = 68
script = ExtResource( 3 )

[node name="FG_polygons" type="Node2D" parent="."]
script = ExtResource( 2 )

[node name="black" type="Polygon2D" parent="FG_polygons"]
color = Color( 0, 0, 0, 1 )
polygon = PoolVector2Array( 129.007, 156.472, 125.593, -10.0995, 92.2951, -8.91032, 88.7275, -98.1008, 163.07, -162.202, 227.992, -162.008, 227.977, -180.203, 244.039, -180.203, 244.086, -162.093, 341.984, -162.016, 341.984, -230.523, 238.107, -230.517, 238.135, -254.452, 247.848, -259.094, 254.12, -742.14, -116.297, -359.124, -113.777, 159.037 )

[node name="black3" type="Polygon2D" parent="FG_polygons"]
color = Color( 0, 0, 0, 1 )
polygon = PoolVector2Array( 241.301, -342.507, 307.972, -473.468, 377.817, -563.949, 450.838, -628.239, 523.065, -676.655, 714.346, -733.008, 715.934, -755.231, 744.25, -755.564, 747.474, -732.8, 981.474, -738.8, 977.474, -926.8, 81.4736, -902.8, 83.4736, -326.8 )

[node name="black4" type="Polygon2D" parent="FG_polygons"]
color = Color( 0, 0, 0, 1 )
polygon = PoolVector2Array( 976.505, -218.8, 974.505, -878.8, 1150.5, -898.8, 1168.5, -30.8, 964.505, -30.8 )

[node name="black2" type="Polygon2D" parent="FG_polygons"]
color = Color( 0, 0, 0, 1 )
polygon = PoolVector2Array( 119.485, 27.422, 186.231, 27.422, 186.511, -17.3866, 266.406, -17.9922, 266.406, -139.648, 365.812, -139.656, 365.797, -221.836, 983.793, -223.975, 973.793, 210.025, 103.793, 158.025 )

[node name="black5" type="Polygon2D" parent="FG_polygons"]
color = Color( 0, 0, 0, 1 )
polygon = PoolVector2Array( 153.033, -151.894, 157.983, -150.48, 112.728, -104.872, 111.668, -109.821 )

[node name="black6" type="Polygon2D" parent="FG_polygons"]
color = Color( 0, 0, 0, 1 )
polygon = PoolVector2Array( 624.433, -701.992, 628.366, -697.122, 551.391, -671.651, 551.016, -678.393 )

[node name="Objects" type="Node2D" parent="."]

[node name="BOXS" type="Node2D" parent="Objects"]

[node name="BigBox_1" parent="Objects/BOXS" instance=ExtResource( 10 )]
position = Vector2( -363.979, -155.228 )

[node name="SmallBox_1" parent="Objects/BOXS" instance=ExtResource( 14 )]
position = Vector2( -364.801, -171.263 )

[node name="Glasses" type="Node2D" parent="Objects"]

[node name="static" type="Node2D" parent="Objects/Glasses"]

[node name="Glass1" parent="Objects/Glasses/static" instance=ExtResource( 11 )]
position = Vector2( 728, -272 )
z_index = -1

[node name="CollisionPolygon2D" parent="Objects/Glasses/static/Glass1" index="0"]
polygon = PoolVector2Array( -8, 40, -8, 20, -8, 3, -8, -20, 8, 0, 8, -8, 8, 10.5, 8, 26.875, 8, 40 )
script = SubResource( 14 )
shard_poly_colors = Color( 1, 1, 1, 0.5 )

[node name="Glass2" parent="Objects/Glasses/static" instance=ExtResource( 11 )]
position = Vector2( 236, -44 )
z_index = -1

[node name="CollisionPolygon2D" parent="Objects/Glasses/static/Glass2" index="0"]
polygon = PoolVector2Array( -8, 28, -8, 20, -8, 3, -8, -12, 8, 8, 8, 0, 8, 16, 8, 28 )
script = SubResource( 15 )
shard_poly_colors = Color( 1, 1, 1, 0.5 )

[node name="rigid" type="Node2D" parent="Objects/Glasses"]

[node name="Glass1" parent="Objects/Glasses/rigid" instance=ExtResource( 11 )]
position = Vector2( -568, -220 )
collision_layer = 524874
collision_mask = 524810
mode = 0

[node name="CollisionPolygon2D" parent="Objects/Glasses/rigid/Glass1" index="0"]
position = Vector2( -0.285736, 3.36252 )
polygon = PoolVector2Array( 8.28571, -27.3625, -7.71429, -59.3625, -7.71429, 36.6375, 8.28571, 36.6375 )
script = SubResource( 16 )
shard_poly_colors = Color( 1, 1, 1, 0.5 )

[node name="RigidBody2D" type="RigidBody2D" parent="Objects"]
position = Vector2( 728, -624 )
z_index = 1
collision_layer = 72
collision_mask = 524360
mass = 10.0
gravity_scale = 5.0
can_sleep = false

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="Objects/RigidBody2D"]
polygon = PoolVector2Array( 8, -124, -8, -124, -8, 332, 8, 352 )

[node name="Polygon2D" type="Polygon2D" parent="Objects/RigidBody2D"]
color = Color( 0, 0, 0, 1 )
polygon = PoolVector2Array( 8, -124, -8, -124, -8, 332, 6.20732, 349.759, 8, 348.5 )

[node name="Sprite" type="Sprite" parent="Objects/RigidBody2D"]
position = Vector2( -8, -4 )
rotation = -1.5708
texture = ExtResource( 19 )

[node name="Sprite3" type="Sprite" parent="Objects/RigidBody2D"]
position = Vector2( 8, -4 )
rotation = 1.5708
texture = ExtResource( 19 )

[node name="Sprite4" type="Sprite" parent="Objects/RigidBody2D"]
position = Vector2( 8, 228 )
rotation = 1.5708
texture = ExtResource( 19 )

[node name="Sprite5" type="Sprite" parent="Objects/RigidBody2D"]
position = Vector2( -2.12714, 340.562 )
rotation = 3.9635
texture = ExtResource( 19 )
region_enabled = true
region_rect = Rect2( 0, 0, 19, 4 )

[node name="Sprite7" type="Sprite" parent="Objects/RigidBody2D"]
position = Vector2( 6.31812, 349.814 )
rotation = 3.01384
texture = ExtResource( 19 )
region_enabled = true
region_rect = Rect2( 0, 0, 3, 4 )

[node name="Sprite2" type="Sprite" parent="Objects/RigidBody2D"]
position = Vector2( -8, 212 )
rotation = -1.5708
texture = ExtResource( 19 )

[node name="Sprite6" type="Sprite" parent="Objects/RigidBody2D"]
position = Vector2( 0, -124 )
texture = ExtResource( 19 )
region_enabled = true
region_rect = Rect2( 0, 0, 15, 4 )

[node name="RigidBody2D2" type="RigidBody2D" parent="Objects"]
position = Vector2( 236, -112 )
z_index = 1
collision_layer = 72
collision_mask = 524360
mass = 10.0
gravity_scale = 5.0
can_sleep = false

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="Objects/RigidBody2D2"]
position = Vector2( 0, 56 )
polygon = PoolVector2Array( 8, -124, -8, -124, -8, 0, 8, 20 )

[node name="Polygon2D" type="Polygon2D" parent="Objects/RigidBody2D2"]
position = Vector2( 0, 56 )
color = Color( 0, 0, 0, 1 )
polygon = PoolVector2Array( 8, -124, -8, -124, -8, 0, 6.19803, 17.7475, 8, 17.1046 )

[node name="Sprite" type="Sprite" parent="Objects/RigidBody2D2"]
position = Vector2( -8, -4.88388 )
rotation = -1.5708
texture = ExtResource( 19 )
region_enabled = true
region_rect = Rect2( 0, 0, 123, 4 )

[node name="Sprite2" type="Sprite" parent="Objects/RigidBody2D2"]
position = Vector2( 8, 2.05545 )
rotation = 1.5708
texture = ExtResource( 19 )
region_enabled = true
region_rect = Rect2( 0, 0, 139, 4 )

[node name="Sprite5" type="Sprite" parent="Objects/RigidBody2D2"]
position = Vector2( -1.45779, 64.9158 )
rotation = 3.9635
texture = ExtResource( 19 )
region_enabled = true
region_rect = Rect2( 0, 0, 19, 4 )

[node name="Sprite7" type="Sprite" parent="Objects/RigidBody2D2"]
position = Vector2( 6.58966, 73.7259 )
rotation = 3.01384
texture = ExtResource( 19 )
region_enabled = true
region_rect = Rect2( 0, 0, 3, 4 )

[node name="Sprite6" type="Sprite" parent="Objects/RigidBody2D2"]
position = Vector2( 0, -68 )
texture = ExtResource( 19 )
region_enabled = true
region_rect = Rect2( 0, 0, 15, 4 )

[node name="enemies" type="Node2D" parent="."]

[node name="dash_enemies" type="Node2D" parent="enemies"]

[node name="Pow_enemy" parent="enemies/dash_enemies" instance=ExtResource( 15 )]
position = Vector2( -550.303, -48.6362 )

[node name="spikes" type="Node2D" parent="enemies"]

[node name="Spikes" parent="enemies/spikes" instance=ExtResource( 6 )]
position = Vector2( -498.281, -10.294 )
Width = 6

[node name="lezer" type="Node2D" parent="enemies"]

[node name="LezerRay" parent="enemies/lezer" instance=ExtResource( 12 )]
position = Vector2( -552.859, -105.296 )

[node name="Complex_Objects" type="Node2D" parent="."]

[node name="LezerOnRoop" type="Node2D" parent="Complex_Objects"]
position = Vector2( -674.473, 15.495 )

[node name="StaticBody2D" type="StaticBody2D" parent="Complex_Objects/LezerOnRoop"]
position = Vector2( -0.0717163, 0.000976562 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="Complex_Objects/LezerOnRoop/StaticBody2D"]
shape = SubResource( 17 )

[node name="PinJoint2D" type="PinJoint2D" parent="Complex_Objects/LezerOnRoop" groups=[
"GlassPinJoint",
]]
position = Vector2( -0.0677185, -0.0107269 )
node_a = NodePath("../StaticBody2D")
node_b = NodePath("../Glass")

[node name="Glass" parent="Complex_Objects/LezerOnRoop" instance=ExtResource( 11 )]
position = Vector2( -0.074707, 0.00867462 )
mode = 0

[node name="CollisionPolygon2D" parent="Complex_Objects/LezerOnRoop/Glass" index="0"]
polygon = PoolVector2Array( -0.996887, -0.304535, -0.751465, 19.4075, 0.711914, 19.3828, 0.971863, -0.312347 )
script = SubResource( 18 )
shard_poly_colors = Color( 1, 1, 1, 0.5 )

[node name="PinJoint2D2" type="PinJoint2D" parent="Complex_Objects/LezerOnRoop" groups=[
"GlassPinJoint",
]]
position = Vector2( -0.0847168, 18.6701 )
node_a = NodePath("../Glass")
node_b = NodePath("../RigidBody2D")

[node name="RigidBody2D" type="RigidBody2D" parent="Complex_Objects/LezerOnRoop"]
position = Vector2( -0.131714, 32.814 )
collision_layer = 6
collision_mask = 6

[node name="CollisionShape2D" type="CollisionShape2D" parent="Complex_Objects/LezerOnRoop/RigidBody2D"]
shape = SubResource( 19 )

[node name="Polygon2D" type="Polygon2D" parent="Complex_Objects/LezerOnRoop/RigidBody2D"]
color = Color( 0.105882, 0.105882, 0.105882, 1 )
polygon = PoolVector2Array( -0.99202, -14.9907, -0.837952, 14.8974, 0.89444, 14.8974, 0.89444, -15.1833 )

[node name="PinJoint2D3" type="PinJoint2D" parent="Complex_Objects/LezerOnRoop"]
position = Vector2( -0.114716, 46.965 )
node_a = NodePath("../RigidBody2D")
node_b = NodePath("../RigidBody2D2")

[node name="RigidBody2D2" type="RigidBody2D" parent="Complex_Objects/LezerOnRoop"]
position = Vector2( -0.0997314, 54.336 )
collision_layer = 6
collision_mask = 6

[node name="CollisionShape2D" type="CollisionShape2D" parent="Complex_Objects/LezerOnRoop/RigidBody2D2"]
shape = SubResource( 20 )

[node name="Polygon2D" type="Polygon2D" parent="Complex_Objects/LezerOnRoop/RigidBody2D2"]
color = Color( 0.0705882, 0.0705882, 0.0705882, 1 )
polygon = PoolVector2Array( -7.97997, -7.94757, -7.93577, 8.00653, 7.97413, 8.05072, 7.92994, -7.99176 )

[node name="LezerRay" parent="Complex_Objects/LezerOnRoop/RigidBody2D2" instance=ExtResource( 12 )]
rotation = 1.5708
cast_to = Vector2( 1000, 0 )

[node name="btn_and_door" type="Node2D" parent="Complex_Objects"]
position = Vector2( -634.838, 30.6636 )

[node name="PhysicBTN2D2" parent="Complex_Objects/btn_and_door" instance=ExtResource( 7 )]

[node name="CheckPoints" type="Node2D" parent="."]
__meta__ = {
"_editor_description_": ""
}

[node name="CheckPoint" parent="CheckPoints" instance=ExtResource( 8 )]
position = Vector2( -458.205, -388.333 )

[node name="exit_portal" parent="." instance=ExtResource( 16 )]
position = Vector2( 952.459, -237.891 )
rotation = 1.5708
next_scene = ExtResource( 22 )
next_level = 9

[node name="Control" type="Node2D" parent="."]

[node name="Zone_Control" type="Node2D" parent="Control"]
script = ExtResource( 25 )
zone_path_0 = "res://Scenes/Levels/inside_levels/level_8/zones/level_8_zone_1.tscn"
zone_path_1 = "res://Scenes/Levels/inside_levels/level_8/zones/level_8_zone_2.tscn"
zone_path_2 = "res://Scenes/Levels/inside_levels/level_8/zones/level_8_zone_3.tscn"
zone_path_3 = "res://Scenes/Levels/inside_levels/level_8/zones/level_8_zone_4.tscn"

[node name="VisibilityNotifiers" type="Node2D" parent="Control/Zone_Control"]

[node name="0" type="VisibilityNotifier2D" parent="Control/Zone_Control/VisibilityNotifiers"]
position = Vector2( 850.892, -393.007 )
rect = Rect2( -10, -10, 50, 100 )

[node name="1" type="VisibilityNotifier2D" parent="Control/Zone_Control/VisibilityNotifiers"]
position = Vector2( 804.513, -362.088 )
rect = Rect2( -10, -10, 40, 100 )

[node name="2" type="VisibilityNotifier2D" parent="Control/Zone_Control/VisibilityNotifiers"]
position = Vector2( 121.473, -116.135 )
rect = Rect2( -10, -10, 40, 100 )

[node name="3" type="VisibilityNotifier2D" parent="Control/Zone_Control/VisibilityNotifiers"]
position = Vector2( 229.54, -209.004 )
rect = Rect2( -10, -10, 40, 40 )

[node name="Zones" type="Node2D" parent="Control/Zone_Control"]

[node name="00" parent="Control/Zone_Control/Zones" instance=ExtResource( 20 )]

[node name="11" parent="Control/Zone_Control/Zones" instance=ExtResource( 21 )]

[node name="22" parent="Control/Zone_Control/Zones" instance=ExtResource( 17 )]

[node name="33" parent="Control/Zone_Control/Zones" instance=ExtResource( 26 )]

[node name="Object_Control" type="Node2D" parent="Control"]
script = ExtResource( 23 )
object_path_0 = "res://Scenes/enemys/DashSpik.tscn"

[node name="VisibilityNotifiers" type="Node2D" parent="Control/Object_Control"]

[node name="0" type="VisibilityNotifier2D" parent="Control/Object_Control/VisibilityNotifiers"]
position = Vector2( -24.3211, -55.5061 )
rect = Rect2( -10, -10, 10, 15 )
script = ExtResource( 24 )

[node name="Objects" type="Node2D" parent="Control/Object_Control"]

[node name="00" parent="Control/Object_Control/Objects" instance=ExtResource( 15 )]
position = Vector2( 952.505, -488.192 )

[editable path="player"]

[editable path="Objects/Glasses/static/Glass1"]

[editable path="Objects/Glasses/static/Glass2"]

[editable path="Objects/Glasses/rigid/Glass1"]

[editable path="Complex_Objects/LezerOnRoop/Glass"]
