[gd_scene load_steps=47 format=2]

[ext_resource path="res://scripts/Ground/ColoredPolygon_Circle.gd" type="Script" id=1]
[ext_resource path="res://scripts/Ground/BG_polygons.gd" type="Script" id=2]
[ext_resource path="res://scripts/Ground/ColoredPolygon_Poly.gd" type="Script" id=3]
[ext_resource path="res://scripts/Ground/ColoredPolygon_Rectangle.gd" type="Script" id=4]
[ext_resource path="res://Scenes/Interface_scenes/Shader.tscn" type="PackedScene" id=5]
[ext_resource path="res://Scenes/enemys/Spikes.tscn" type="PackedScene" id=6]
[ext_resource path="res://Scenes/Interactive_Objects/PhysicBTN2D.tscn" type="PackedScene" id=7]
[ext_resource path="res://Scenes/global/CheckPoint.tscn" type="PackedScene" id=8]
[ext_resource path="res://Scenes/player.tscn" type="PackedScene" id=9]
[ext_resource path="res://Scenes/Objects/Box_1.tscn" type="PackedScene" id=10]
[ext_resource path="res://Scenes/Interactive_Objects/Glass.tscn" type="PackedScene" id=11]
[ext_resource path="res://Scenes/enemys/Lezer.tscn" type="PackedScene" id=12]
[ext_resource path="res://Scenes/Interface_scenes/Game_HUD.tscn" type="PackedScene" id=13]
[ext_resource path="res://Scenes/Objects/Box_2.tscn" type="PackedScene" id=14]
[ext_resource path="res://Scenes/enemys/DashSpik.tscn" type="PackedScene" id=15]
[ext_resource path="res://Scenes/exit_portal.tscn" type="PackedScene" id=16]
[ext_resource path="res://Scenes/Levels/inside_levels/level_2/fan.tscn" type="PackedScene" id=17]
[ext_resource path="res://scripts/Ground/BG_polygons_levels.gd" type="Script" id=18]

[sub_resource type="RectangleShape2D" id=1]
extents = Vector2( 86.5414, 10 )

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 169.786, 10 )

[sub_resource type="RectangleShape2D" id=3]
extents = Vector2( 262.561, 10 )

[sub_resource type="RectangleShape2D" id=4]
extents = Vector2( 251.566, 10 )

[sub_resource type="RectangleShape2D" id=5]
extents = Vector2( 74.3723, 10 )

[sub_resource type="RectangleShape2D" id=6]
extents = Vector2( 74.3723, 71.6346 )

[sub_resource type="RectangleShape2D" id=7]
extents = Vector2( 204.497, 10 )

[sub_resource type="RectangleShape2D" id=8]
extents = Vector2( 157.972, 10 )

[sub_resource type="RectangleShape2D" id=9]
extents = Vector2( 88.641, 10 )

[sub_resource type="RectangleShape2D" id=10]
extents = Vector2( 77.4651, 10 )

[sub_resource type="RectangleShape2D" id=11]
extents = Vector2( 35.5654, 10 )

[sub_resource type="RectangleShape2D" id=12]
extents = Vector2( 37.0095, 10 )

[sub_resource type="RectangleShape2D" id=13]
extents = Vector2( 69.9684, 10 )

[sub_resource type="RectangleShape2D" id=14]
extents = Vector2( 128.567, 10 )

[sub_resource type="RectangleShape2D" id=15]
extents = Vector2( 52.1565, 10 )

[sub_resource type="RectangleShape2D" id=16]
extents = Vector2( 100.807, 10 )

[sub_resource type="RectangleShape2D" id=17]
extents = Vector2( 64.9213, 10 )

[sub_resource type="RectangleShape2D" id=18]
extents = Vector2( 26.1993, 10 )

[sub_resource type="RectangleShape2D" id=19]
extents = Vector2( 116.471, 32.613 )

[sub_resource type="RectangleShape2D" id=20]
extents = Vector2( 34.7642, 10 )

[sub_resource type="RectangleShape2D" id=21]
extents = Vector2( 105.36, 10 )

[sub_resource type="CircleShape2D" id=22]

[sub_resource type="GDScript" id=23]
script/source = "extends CollisionPolygon2D

onready var parent = get_parent()

export var shard_poly_colors = Color(1,1,1,0.5)
export var is_complex = false

var tween = Tween.new()
var poly_color = Polygon2D.new()
var is_added : bool = false

onready var line_points: Array



# Called when the node enters the scene tree for the first time.
func _ready():
	randomize()
	poly_color.polygon = polygon
	poly_color.color = shard_poly_colors
	poly_color.color.a = 0.7
	add_child(poly_color)
	
	var poly_line = get_polygon()

	for i in range(0 , poly_line.size()):
		#draw_line(poly_line[i-1] , poly_line[i], OutLine , Width)
		line_points.append(poly_line[i])
	line_points.append(poly_line[0])
	line_points.append(poly_line[1])


func _draw():
	draw_polyline(line_points,Color(1,1,1,0.7),1)


func explode():
	var points = polygon
	var delaunay_points_one = Geometry.triangulate_polygon(points)
	
	if not delaunay_points_one:
		print(\"serious error occurred no delaunay points found\")
	#find the midlle point of each triangle and add it to points
	for index in len(delaunay_points_one) / 3:
		var shard_pool_one = PoolVector2Array()
		var Ox = 0
		var Oy = 0
		for n in range(3):
			shard_pool_one.append(points[delaunay_points_one[(index * 3) + n]])
			Ox += shard_pool_one[n].x
			Oy += shard_pool_one[n].y
		points.append(Vector2(Ox / 3, Oy / 3))
	
	var delaunay_points_two = Geometry.triangulate_delaunay_2d(points)
	
	if is_complex:
		delaunay_points_two = delaunay_points_one
	
	for index in len(delaunay_points_two) / 3:
		var shard_pool = PoolVector2Array()
		
		# loop over the three points in our triangle
		for n in range(3):
			shard_pool.append(points[delaunay_points_two[(index * 3) + n]])
		
		var shard_polygon = Polygon2D.new()
		var shard_collision_polygon = CollisionPolygon2D.new()
		var shard_rigidbody = RigidBody2D.new()

		
		shard_polygon.polygon = shard_pool
		shard_collision_polygon.polygon = shard_pool
		shard_rigidbody.applied_torque = round(rand_range(-1,1))
		shard_rigidbody.mass = 0.4
		shard_rigidbody.gravity_scale = 0.2
		shard_rigidbody.set_collision_layer_bit(0,false)
		shard_rigidbody.set_collision_mask_bit(0,false)
		shard_rigidbody.set_collision_layer_bit(2,true)
		shard_rigidbody.set_collision_mask_bit(2,true)
		shard_rigidbody.add_child(shard_polygon)
		shard_rigidbody.add_child(shard_collision_polygon)
		
		shard_polygon.color = shard_poly_colors
		
#		add_child(shard_rigidbody)
#		shard_polygon.add_child(tween)
		call_deferred(\"add_child\", shard_rigidbody)
		if is_added == false:
			call_deferred(\"add_child\", tween)
			is_added = true
		
		tween.interpolate_property(self, \"modulate\", Color(1,1,1,1), Color(1,1,1,0), 0.5, tween.TRANS_LINEAR, tween.EASE_OUT_IN)
		shard_rigidbody.apply_central_impulse(Vector2(5,0).rotated(deg2rad(rand_range(0,360))))
	
	yield(get_tree().create_timer(1), \"timeout\")
	tween.start()
	yield(get_tree().create_timer(0.5), \"timeout\")
	for ch in get_children():
		ch.queue_free()

func destroy_the_glass():
	for n in range(20):
		parent.set_collision_layer_bit(n, false)
		parent.set_collision_mask_bit(n, false)
	poly_color.hide()
	
	#Deleting the pinjoint conected to the glass before deleting the glass itself
	var twodots = \"../\"
	for child in get_parent().get_parent().get_children():
		if child.is_in_group(\"GlassPinJoint\"):
			if child.get_node_a() == twodots + get_parent().name or child.get_node_b() == twodots + get_parent().name:
				child.queue_free()
	
	explode()
	yield(get_tree().create_timer(5), \"timeout\")
	parent.queue_free()


func _on_RigidBody2D2_body_entered(body):
#	print(body.get_collision_layer_bit(9))
#	print(body.get_linear_velocity().length())
#	print(body.name)
	if parent.get_linear_velocity().length() > 40:
		destroy_the_glass()
	elif body.get_collision_layer_bit(9) == true && body.get_collision_mask_bit(9) == true:
		destroy_the_glass()
	elif body.get_collision_layer_bit(9) == true && body.get_linear_velocity().length() > 80:
		destroy_the_glass()
	elif body.get_collision_mask_bit(9) == true:
		destroy_the_glass()
"

[sub_resource type="GDScript" id=24]
script/source = "extends CollisionPolygon2D

onready var parent = get_parent()

export var shard_poly_colors = Color(1,1,1,0.5)
export var is_complex = false

var tween = Tween.new()
var poly_color = Polygon2D.new()
var is_added : bool = false

onready var line_points: Array



# Called when the node enters the scene tree for the first time.
func _ready():
	randomize()
	poly_color.polygon = polygon
	poly_color.color = shard_poly_colors
	poly_color.color.a = 0.7
	add_child(poly_color)
	
	var poly_line = get_polygon()

	for i in range(0 , poly_line.size()):
		#draw_line(poly_line[i-1] , poly_line[i], OutLine , Width)
		line_points.append(poly_line[i])
	line_points.append(poly_line[0])
	line_points.append(poly_line[1])


func _draw():
	draw_polyline(line_points,Color(1,1,1,0.7),1)


func explode():
	var points = polygon
	var delaunay_points_one = Geometry.triangulate_polygon(points)
	
	if not delaunay_points_one:
		print(\"serious error occurred no delaunay points found\")
	#find the midlle point of each triangle and add it to points
	for index in len(delaunay_points_one) / 3:
		var shard_pool_one = PoolVector2Array()
		var Ox = 0
		var Oy = 0
		for n in range(3):
			shard_pool_one.append(points[delaunay_points_one[(index * 3) + n]])
			Ox += shard_pool_one[n].x
			Oy += shard_pool_one[n].y
		points.append(Vector2(Ox / 3, Oy / 3))
	
	var delaunay_points_two = Geometry.triangulate_delaunay_2d(points)
	
	if is_complex:
		delaunay_points_two = delaunay_points_one
	
	for index in len(delaunay_points_two) / 3:
		var shard_pool = PoolVector2Array()
		
		# loop over the three points in our triangle
		for n in range(3):
			shard_pool.append(points[delaunay_points_two[(index * 3) + n]])
		
		var shard_polygon = Polygon2D.new()
		var shard_collision_polygon = CollisionPolygon2D.new()
		var shard_rigidbody = RigidBody2D.new()

		
		shard_polygon.polygon = shard_pool
		shard_collision_polygon.polygon = shard_pool
		shard_rigidbody.applied_torque = round(rand_range(-1,1))
		shard_rigidbody.mass = 0.4
		shard_rigidbody.gravity_scale = 0.2
		shard_rigidbody.set_collision_layer_bit(0,false)
		shard_rigidbody.set_collision_mask_bit(0,false)
		shard_rigidbody.set_collision_layer_bit(2,true)
		shard_rigidbody.set_collision_mask_bit(2,true)
		shard_rigidbody.add_child(shard_polygon)
		shard_rigidbody.add_child(shard_collision_polygon)
		
		shard_polygon.color = shard_poly_colors
		
#		add_child(shard_rigidbody)
#		shard_polygon.add_child(tween)
		call_deferred(\"add_child\", shard_rigidbody)
		if is_added == false:
			call_deferred(\"add_child\", tween)
			is_added = true
		
		tween.interpolate_property(self, \"modulate\", Color(1,1,1,1), Color(1,1,1,0), 0.5, tween.TRANS_LINEAR, tween.EASE_OUT_IN)
		shard_rigidbody.apply_central_impulse(Vector2(5,0).rotated(deg2rad(rand_range(0,360))))
	
	yield(get_tree().create_timer(1), \"timeout\")
	tween.start()
	yield(get_tree().create_timer(0.5), \"timeout\")
	for ch in get_children():
		ch.queue_free()

func destroy_the_glass():
	for n in range(20):
		parent.set_collision_layer_bit(n, false)
		parent.set_collision_mask_bit(n, false)
	poly_color.hide()
	
	#Deleting the pinjoint conected to the glass before deleting the glass itself
	var twodots = \"../\"
	for child in get_parent().get_parent().get_children():
		if child.is_in_group(\"GlassPinJoint\"):
			if child.get_node_a() == twodots + get_parent().name or child.get_node_b() == twodots + get_parent().name:
				child.queue_free()
	
	explode()
	yield(get_tree().create_timer(5), \"timeout\")
	parent.queue_free()


func _on_RigidBody2D2_body_entered(body):
#	print(body.get_collision_layer_bit(9))
#	print(body.get_linear_velocity().length())
#	print(body.name)
	if parent.get_linear_velocity().length() > 40:
		destroy_the_glass()
	elif body.get_collision_layer_bit(9) == true && body.get_collision_mask_bit(9) == true:
		destroy_the_glass()
	elif body.get_collision_layer_bit(9) == true && body.get_linear_velocity().length() > 80:
		destroy_the_glass()
	elif body.get_collision_mask_bit(9) == true:
		destroy_the_glass()
"

[sub_resource type="RectangleShape2D" id=25]
extents = Vector2( 1, 1 )

[sub_resource type="GDScript" id=26]
script/source = "extends CollisionPolygon2D

onready var parent = get_parent()

export var shard_poly_colors = Color(1,1,1,0.5)
export var is_complex = false

var tween = Tween.new()
var poly_color = Polygon2D.new()
var is_added : bool = false

onready var line_points: Array



# Called when the node enters the scene tree for the first time.
func _ready():
	randomize()
	poly_color.polygon = polygon
	poly_color.color = shard_poly_colors
	poly_color.color.a = 0.7
	add_child(poly_color)
	
	var poly_line = get_polygon()

	for i in range(0 , poly_line.size()):
		#draw_line(poly_line[i-1] , poly_line[i], OutLine , Width)
		line_points.append(poly_line[i])
	line_points.append(poly_line[0])
	line_points.append(poly_line[1])


func _draw():
	draw_polyline(line_points,Color(1,1,1,0.7),1)


func explode():
	var points = polygon
	var delaunay_points_one = Geometry.triangulate_polygon(points)
	
	if not delaunay_points_one:
		print(\"serious error occurred no delaunay points found\")
	#find the midlle point of each triangle and add it to points
	for index in len(delaunay_points_one) / 3:
		var shard_pool_one = PoolVector2Array()
		var Ox = 0
		var Oy = 0
		for n in range(3):
			shard_pool_one.append(points[delaunay_points_one[(index * 3) + n]])
			Ox += shard_pool_one[n].x
			Oy += shard_pool_one[n].y
		points.append(Vector2(Ox / 3, Oy / 3))
	
	var delaunay_points_two = Geometry.triangulate_delaunay_2d(points)
	
	if is_complex:
		delaunay_points_two = delaunay_points_one
	
	for index in len(delaunay_points_two) / 3:
		var shard_pool = PoolVector2Array()
		
		# loop over the three points in our triangle
		for n in range(3):
			shard_pool.append(points[delaunay_points_two[(index * 3) + n]])
		
		var shard_polygon = Polygon2D.new()
		var shard_collision_polygon = CollisionPolygon2D.new()
		var shard_rigidbody = RigidBody2D.new()

		
		shard_polygon.polygon = shard_pool
		shard_collision_polygon.polygon = shard_pool
		shard_rigidbody.applied_torque = round(rand_range(-1,1))
		shard_rigidbody.mass = 0.4
		shard_rigidbody.gravity_scale = 0.2
		shard_rigidbody.set_collision_layer_bit(0,false)
		shard_rigidbody.set_collision_mask_bit(0,false)
		shard_rigidbody.set_collision_layer_bit(2,true)
		shard_rigidbody.set_collision_mask_bit(2,true)
		shard_rigidbody.add_child(shard_polygon)
		shard_rigidbody.add_child(shard_collision_polygon)
		
		shard_polygon.color = shard_poly_colors
		
#		add_child(shard_rigidbody)
#		shard_polygon.add_child(tween)
		call_deferred(\"add_child\", shard_rigidbody)
		if is_added == false:
			call_deferred(\"add_child\", tween)
			is_added = true
		
		tween.interpolate_property(self, \"modulate\", Color(1,1,1,1), Color(1,1,1,0), 0.5, tween.TRANS_LINEAR, tween.EASE_OUT_IN)
		shard_rigidbody.apply_central_impulse(Vector2(5,0).rotated(deg2rad(rand_range(0,360))))
	
	yield(get_tree().create_timer(1), \"timeout\")
	tween.start()
	yield(get_tree().create_timer(0.5), \"timeout\")
	for ch in get_children():
		ch.queue_free()

func destroy_the_glass():
	for n in range(20):
		parent.set_collision_layer_bit(n, false)
		parent.set_collision_mask_bit(n, false)
	poly_color.hide()
	
	#Deleting the pinjoint conected to the glass before deleting the glass itself
	var twodots = \"../\"
	for child in get_parent().get_parent().get_children():
		if child.is_in_group(\"GlassPinJoint\"):
			if child.get_node_a() == twodots + get_parent().name or child.get_node_b() == twodots + get_parent().name:
				child.queue_free()
	
	explode()
	yield(get_tree().create_timer(5), \"timeout\")
	parent.queue_free()


func _on_RigidBody2D2_body_entered(body):
#	print(body.get_collision_layer_bit(9))
#	print(body.get_linear_velocity().length())
#	print(body.name)
	if parent.get_linear_velocity().length() > 40:
		destroy_the_glass()
	elif body.get_collision_layer_bit(9) == true && body.get_collision_mask_bit(9) == true:
		destroy_the_glass()
	elif body.get_collision_layer_bit(9) == true && body.get_linear_velocity().length() > 80:
		destroy_the_glass()
	elif body.get_collision_mask_bit(9) == true:
		destroy_the_glass()
"

[sub_resource type="RectangleShape2D" id=27]
extents = Vector2( 1, 15 )

[sub_resource type="RectangleShape2D" id=28]
extents = Vector2( 8, 8 )

[node name="level_001" type="Node"]

[node name="BG_polygons" type="Node2D" parent="."]
visible = false
script = ExtResource( 18 )

[node name="blank" type="Polygon2D" parent="BG_polygons" groups=[
"bg_back",
]]
color = Color( 0.192157, 0.192157, 0.192157, 1 )
polygon = PoolVector2Array( 918.52, 906.697, 930.174, 968.146, 911.104, 1009.47, 750.065, 1006.29, 660.011, 916.232, 665.309, 761.551, 598.562, 678.913, 568.898, 593.096, 577.373, 493.507, 750.066, 391.798, 926.996, 462.782, 903.688, 560.253, 815.753, 588.858, 866.607, 708.578, 885.677, 768.967, 841.179, 809.227, 768.077, 802.87, 765.958, 828.297 )

[node name="blank2" type="Polygon2D" parent="BG_polygons" groups=[
"bg_back",
]]
color = Color( 0.192157, 0.192157, 0.192157, 1 )
polygon = PoolVector2Array( 859.19, 702.221, 1267.08, 706.459, 1272.38, 570.847, 1319, 570.847, 1317.94, 917.292, 1248.01, 935.303, 1207.75, 916.232, 1210.93, 770.026, 881.439, 775.324 )

[node name="blank3" type="Polygon2D" parent="BG_polygons" groups=[
"bg_back",
]]
color = Color( 0.192157, 0.192157, 0.192157, 1 )
polygon = PoolVector2Array( 1312.64, 713.875, 1635.78, 718.113, 1638.96, 829.356, 2142.57, 826.283, 2502.42, 830.416, 2498.18, 913.054, 2448.39, 924.708, 2437.79, 879.151, 1932.09, 880.337, 1886.31, 893.298, 1856.57, 880.514, 1534.07, 881.27, 1315.82, 789.097 )

[node name="light" type="Polygon2D" parent="BG_polygons" groups=[
"bg_mid",
]]
color = Color( 0.156863, 0.156863, 0.156863, 1 )
polygon = PoolVector2Array( 377.466, -182.409, 392.568, -60.6488, 321.777, -54.0417, 310.451, -170.138 )

[node name="dark" type="Polygon2D" parent="BG_polygons" groups=[
"bg_front",
]]
color = Color( 0.133333, 0.133333, 0.133333, 1 )
polygon = PoolVector2Array( 400.119, 66.7742, 347.262, 72.4375, 329.328, -37.9958, 389.736, -41.7713 )

[node name="CanvasLayer" type="CanvasLayer" parent="."]
layer = 111

[node name="Game_HUD" parent="CanvasLayer" instance=ExtResource( 13 )]
visible = false

[node name="Shader" parent="." instance=ExtResource( 5 )]

[node name="player" parent="." instance=ExtResource( 9 )]

[node name="PlayerRigidBody" parent="player" index="1"]
position = Vector2( 880.253, 991.907 )

[node name="Control" parent="player/CanvasLayer" index="0"]
visible = false

[node name="Ground" type="Node2D" parent="."]

[node name="StaticBodyRect" type="StaticBody2D" parent="Ground"]
collision_layer = 68
collision_mask = 64
script = ExtResource( 4 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 832.459, 1006.81 )
shape = SubResource( 1 )

[node name="CollisionShape2D14" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 1048.92, 771.619 )
shape = SubResource( 2 )

[node name="CollisionShape2D28" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 1670.1, 878.54 )
shape = SubResource( 2 )

[node name="CollisionShape2D33" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 2189.62, 878.54 )
shape = SubResource( 3 )

[node name="CollisionShape2D29" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 1879.22, 830.985 )
shape = SubResource( 4 )

[node name="CollisionShape2D34" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 2422.22, 830.985 )
shape = SubResource( 4 )

[node name="CollisionShape2D31" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 1482.65, 713.708 )
shape = SubResource( 2 )

[node name="CollisionShape2D32" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 1482.86, 852.619 )
rotation = 0.373882
shape = SubResource( 2 )

[node name="CollisionShape2D25" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 1295.14, 920.847 )
rotation = -0.315588
shape = SubResource( 5 )

[node name="CollisionShape2D30" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 1216.14, 917.847 )
rotation = 0.519043
shape = SubResource( 5 )

[node name="CollisionShape2D27" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 1296.41, 566.201 )
shape = SubResource( 5 )

[node name="CollisionShape2D43" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 1494.53, 860.732 )
rotation = -0.321011
shape = SubResource( 6 )

[node name="CollisionShape2D44" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 1637.36, 689.612 )
rotation = -2.5163
shape = SubResource( 6 )

[node name="CollisionShape2D20" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 1060.08, 705.875 )
shape = SubResource( 7 )

[node name="CollisionShape2D22" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 1268.45, 727.534 )
rotation = 1.5708
shape = SubResource( 8 )

[node name="CollisionShape2D23" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 1208.72, 850.543 )
rotation = 1.5708
shape = SubResource( 9 )

[node name="CollisionShape2D24" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 1318.55, 646.189 )
rotation = 1.5708
shape = SubResource( 10 )

[node name="CollisionShape2D42" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 1637.67, 759.109 )
rotation = 1.5708
shape = SubResource( 10 )

[node name="CollisionShape2D26" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 1318.55, 858.949 )
rotation = 1.5708
shape = SubResource( 10 )

[node name="CollisionShape2D35" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 1869.31, 890.918 )
rotation = 0.375975
shape = SubResource( 11 )

[node name="CollisionShape2D36" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 1907.93, 893.378 )
rotation = -0.0881466
shape = SubResource( 11 )

[node name="CollisionShape2D39" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 2442.18, 904.61 )
rotation = 1.5708
shape = SubResource( 11 )

[node name="CollisionShape2D40" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 2498.14, 874.847 )
rotation = 1.5708
shape = SubResource( 11 )

[node name="CollisionShape2D41" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 2470.76, 918.897 )
rotation = 2.97718
shape = SubResource( 11 )

[node name="CollisionShape2D38" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 2147.53, 820.479 )
rotation = 0.270303
shape = SubResource( 12 )

[node name="CollisionShape2D45" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 2164.17, 803.219 )
rotation = 1.13673
shape = SubResource( 12 )

[node name="CollisionShape2D5" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 704.959, 963.81 )
rotation = 0.799225
shape = SubResource( 13 )

[node name="CollisionShape2D6" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 671.625, 816.99 )
rotation = 1.60621
shape = SubResource( 14 )

[node name="CollisionShape2D8" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 636.307, 670.688 )
rotation = 0.538644
shape = SubResource( 15 )

[node name="CollisionShape2D9" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 579.885, 610.187 )
rotation = 1.25556
shape = SubResource( 15 )

[node name="CollisionShape2D10" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 574.226, 545.488 )
rotation = 1.69216
shape = SubResource( 15 )

[node name="CollisionShape2D11" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 657.664, 443.664 )
rotation = 2.58955
shape = SubResource( 16 )

[node name="CollisionShape2D12" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 833.027, 423.865 )
rotation = 3.52202
shape = SubResource( 16 )

[node name="CollisionShape2D13" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 919.228, 507.769 )
rotation = 4.92335
shape = SubResource( 17 )

[node name="CollisionShape2D15" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 871.076, 572.31 )
rotation = 2.94786
shape = SubResource( 17 )

[node name="CollisionShape2D16" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 841.811, 651.665 )
rotation = 1.20551
shape = SubResource( 17 )

[node name="CollisionShape2D17" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 805.18, 784.997 )
rotation = 0.99771
shape = SubResource( 18 )

[node name="CollisionShape2D18" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 840.016, 803.726 )
rotation = -0.191806
shape = SubResource( 18 )

[node name="CollisionShape2D19" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 867.734, 787.245 )
rotation = -0.787569
shape = SubResource( 18 )

[node name="CollisionShape2D7" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 755.937, 703.563 )
rotation = 1.37765
shape = SubResource( 19 )

[node name="CollisionShape2D2" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 922.959, 977.81 )
rotation = -1.17569
shape = SubResource( 20 )

[node name="CollisionShape2D3" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 923.959, 939.31 )
rotation = -1.71693
shape = SubResource( 20 )

[node name="CollisionShape2D4" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 843.959, 864.81 )
rotation = -2.65198
shape = SubResource( 21 )

[node name="StaticBodyCircle" type="StaticBody2D" parent="Ground"]
position = Vector2( 66.0712, -157.155 )
collision_layer = 68
collision_mask = 68
script = ExtResource( 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="Ground/StaticBodyCircle"]
position = Vector2( 610.97, 911.173 )
shape = SubResource( 22 )

[node name="StaticBodypoly" type="StaticBody2D" parent="Ground"]
collision_layer = 68
collision_mask = 68
script = ExtResource( 3 )

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="Ground/StaticBodypoly"]
polygon = PoolVector2Array( 2129.65, 840.962, 2144.19, 841.057, 2140.51, 821.074, 2130.4, 821.004 )

[node name="FG_polygons" type="Node2D" parent="."]
script = ExtResource( 2 )

[node name="black" type="Polygon2D" parent="FG_polygons"]
color = Color( 0, 0, 0, 1 )
polygon = PoolVector2Array( 637.173, -145.79, 654.635, 6.60034, 573.677, 17.7121, 576.852, -129.916 )

[node name="Objects" type="Node2D" parent="."]

[node name="BOXS" type="Node2D" parent="Objects"]

[node name="BigBox_1" parent="Objects/BOXS" instance=ExtResource( 10 )]
position = Vector2( -363.979, -155.228 )

[node name="SmallBox_1" parent="Objects/BOXS" instance=ExtResource( 14 )]
position = Vector2( -364.801, -171.263 )

[node name="Glasses" type="Node2D" parent="Objects"]

[node name="static" type="Node2D" parent="Objects/Glasses"]

[node name="Glass1" parent="Objects/Glasses/static" instance=ExtResource( 11 )]
position = Vector2( -489.413, -219.641 )

[node name="CollisionPolygon2D" parent="Objects/Glasses/static/Glass1" index="0"]
polygon = PoolVector2Array( -35.1419, 0.427876, -17.2879, -2.90195, 14.8243, -8.89096, 34.1766, -12.5002, 33.5453, -9.86945, 16.027, -6.59912, -16.6042, -0.507484, -34.9078, 2.90945 )
script = SubResource( 23 )
shard_poly_colors = Color( 1, 1, 1, 0.5 )

[node name="rigid" type="Node2D" parent="Objects/Glasses"]

[node name="Glass1" parent="Objects/Glasses/rigid" instance=ExtResource( 11 )]
position = Vector2( -511.584, -193.536 )
collision_layer = 524874
collision_mask = 524810
mode = 0

[node name="CollisionPolygon2D" parent="Objects/Glasses/rigid/Glass1" index="0"]
position = Vector2( -0.285736, 3.36252 )
polygon = PoolVector2Array( -4, -16, 4, -16, 4, 8, -4, 8 )
script = SubResource( 24 )
shard_poly_colors = Color( 1, 1, 1, 0.5 )

[node name="fan" parent="Objects" instance=ExtResource( 17 )]
position = Vector2( 677, 754 )

[node name="enemies" type="Node2D" parent="."]

[node name="dash_enemies" type="Node2D" parent="enemies"]

[node name="Pow_enemy" parent="enemies/dash_enemies" instance=ExtResource( 15 )]
position = Vector2( -550.303, -48.6362 )

[node name="spikes" type="Node2D" parent="enemies"]

[node name="Spikes" parent="enemies/spikes" instance=ExtResource( 6 )]
position = Vector2( -498.281, -10.294 )
Width = 6

[node name="lezer" type="Node2D" parent="enemies"]

[node name="LezerRay" parent="enemies/lezer" instance=ExtResource( 12 )]
position = Vector2( -552.859, -105.296 )

[node name="Complex_Objects" type="Node2D" parent="."]
position = Vector2( 344.703, -478.01 )

[node name="LezerOnRoop" type="Node2D" parent="Complex_Objects"]
position = Vector2( -610.473, 571.495 )

[node name="StaticBody2D" type="StaticBody2D" parent="Complex_Objects/LezerOnRoop"]
position = Vector2( -275, 68 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="Complex_Objects/LezerOnRoop/StaticBody2D"]
shape = SubResource( 25 )

[node name="PinJoint2D" type="PinJoint2D" parent="Complex_Objects/LezerOnRoop" groups=[
"GlassPinJoint",
]]
position = Vector2( -274.996, 67.9883 )
node_a = NodePath("../StaticBody2D")
node_b = NodePath("../Glass")

[node name="Glass" parent="Complex_Objects/LezerOnRoop" instance=ExtResource( 11 )]
position = Vector2( -275.003, 68.0077 )
mode = 0

[node name="CollisionPolygon2D" parent="Complex_Objects/LezerOnRoop/Glass" index="0"]
polygon = PoolVector2Array( -0.996887, -0.304535, -0.751465, 19.4075, 0.711914, 19.3828, 0.971863, -0.312347 )
script = SubResource( 26 )
shard_poly_colors = Color( 1, 1, 1, 0.5 )

[node name="PinJoint2D2" type="PinJoint2D" parent="Complex_Objects/LezerOnRoop" groups=[
"GlassPinJoint",
]]
position = Vector2( -275.013, 86.6691 )
node_a = NodePath("../Glass")
node_b = NodePath("../RigidBody2D")

[node name="RigidBody2D" type="RigidBody2D" parent="Complex_Objects/LezerOnRoop"]
position = Vector2( -275.06, 100.813 )
collision_layer = 6
collision_mask = 6

[node name="CollisionShape2D" type="CollisionShape2D" parent="Complex_Objects/LezerOnRoop/RigidBody2D"]
shape = SubResource( 27 )

[node name="Polygon2D" type="Polygon2D" parent="Complex_Objects/LezerOnRoop/RigidBody2D"]
color = Color( 0.105882, 0.105882, 0.105882, 1 )
polygon = PoolVector2Array( -0.99202, -14.9907, -0.837952, 14.8974, 0.89444, 14.8974, 0.89444, -15.1833 )

[node name="PinJoint2D3" type="PinJoint2D" parent="Complex_Objects/LezerOnRoop"]
position = Vector2( -275.043, 114.964 )
node_a = NodePath("../RigidBody2D")
node_b = NodePath("../RigidBody2D2")

[node name="RigidBody2D2" type="RigidBody2D" parent="Complex_Objects/LezerOnRoop"]
position = Vector2( -275.028, 122.335 )
collision_layer = 6
collision_mask = 6

[node name="CollisionShape2D" type="CollisionShape2D" parent="Complex_Objects/LezerOnRoop/RigidBody2D2"]
shape = SubResource( 28 )

[node name="Polygon2D" type="Polygon2D" parent="Complex_Objects/LezerOnRoop/RigidBody2D2"]
color = Color( 0.0705882, 0.0705882, 0.0705882, 1 )
polygon = PoolVector2Array( -7.97997, -7.94757, -7.93577, 8.00653, 7.97413, 8.05072, 7.92994, -7.99176 )

[node name="LezerRay" parent="Complex_Objects/LezerOnRoop/RigidBody2D2" instance=ExtResource( 12 )]
rotation = 1.5708
cast_to = Vector2( 1000, 0 )

[node name="btn_and_door" type="Node2D" parent="Complex_Objects"]

[node name="PhysicBTN2D2" parent="Complex_Objects/btn_and_door" instance=ExtResource( 7 )]
position = Vector2( -834.904, 654.467 )

[node name="CheckPoints" type="Node2D" parent="."]
__meta__ = {
"_editor_description_": ""
}

[node name="CheckPoint" parent="CheckPoints" instance=ExtResource( 8 )]
position = Vector2( -458.205, -388.333 )

[node name="exit_portal" parent="." instance=ExtResource( 16 )]
position = Vector2( 2470.75, 900.133 )
rotation = 1.5708

[editable path="player"]

[editable path="Objects/Glasses/static/Glass1"]

[editable path="Objects/Glasses/rigid/Glass1"]

[editable path="Complex_Objects/LezerOnRoop/Glass"]
