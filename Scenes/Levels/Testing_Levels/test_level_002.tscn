[gd_scene load_steps=45 format=2]

[ext_resource path="res://scripts/Ground/ColoredPolygon_Rectangle.gd" type="Script" id=1]
[ext_resource path="res://scripts/Ground/ColoredPolygon_Poly.gd" type="Script" id=2]
[ext_resource path="res://scripts/Ground/BG_polygons.gd" type="Script" id=3]
[ext_resource path="res://Scenes/Interactive_Objects/PhysicBTN2D.tscn" type="PackedScene" id=4]
[ext_resource path="res://Scenes/exit_portal.tscn" type="PackedScene" id=5]
[ext_resource path="res://scripts/Ground/ColoredPolygon_Circle.gd" type="Script" id=6]
[ext_resource path="res://Scenes/player.tscn" type="PackedScene" id=7]
[ext_resource path="res://Scenes/Interface_scenes/Game_HUD.tscn" type="PackedScene" id=9]
[ext_resource path="res://Scenes/global/CheckPoint.tscn" type="PackedScene" id=10]
[ext_resource path="res://Scenes/Levels/inside_levels/level_1/Cage.tscn" type="PackedScene" id=11]
[ext_resource path="res://Scenes/enemys/Lezer.tscn" type="PackedScene" id=12]
[ext_resource path="res://Scenes/Interface_scenes/Shader.tscn" type="PackedScene" id=13]
[ext_resource path="res://Scenes/enemys/DashSpik.tscn" type="PackedScene" id=14]
[ext_resource path="res://Scenes/enemys/Spikes.tscn" type="PackedScene" id=15]
[ext_resource path="res://Scenes/Objects/Box_1.tscn" type="PackedScene" id=16]
[ext_resource path="res://Scenes/Interactive_Objects/Glass.tscn" type="PackedScene" id=17]
[ext_resource path="res://Scenes/Objects/Box_2.tscn" type="PackedScene" id=18]

[sub_resource type="RectangleShape2D" id=1]
extents = Vector2( 187.927, 10 )

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 66.2693, 10 )

[sub_resource type="RectangleShape2D" id=3]
extents = Vector2( 66.2693, 10 )

[sub_resource type="RectangleShape2D" id=4]
extents = Vector2( 82.0873, 10 )

[sub_resource type="RectangleShape2D" id=5]
extents = Vector2( 172.886, 10 )

[sub_resource type="RectangleShape2D" id=6]
extents = Vector2( 103.343, 10 )

[sub_resource type="RectangleShape2D" id=7]
extents = Vector2( 307.77, 10 )

[sub_resource type="RectangleShape2D" id=8]
extents = Vector2( 172.886, 10 )

[sub_resource type="RectangleShape2D" id=9]
extents = Vector2( 77.7429, 10 )

[sub_resource type="RectangleShape2D" id=10]
extents = Vector2( 148.406, 10 )

[sub_resource type="RectangleShape2D" id=11]
extents = Vector2( 36.0641, 26.0694 )

[sub_resource type="RectangleShape2D" id=12]
extents = Vector2( 12.0577, 77.1234 )

[sub_resource type="RectangleShape2D" id=13]
extents = Vector2( 12.0577, 122.888 )

[sub_resource type="RectangleShape2D" id=14]
extents = Vector2( 118.778, 67.0259 )

[sub_resource type="RectangleShape2D" id=15]
extents = Vector2( 116.308, 69.4765 )

[sub_resource type="RectangleShape2D" id=16]
extents = Vector2( 111.313, 69.4765 )

[sub_resource type="RectangleShape2D" id=17]
extents = Vector2( 111.313, 9.64774 )

[sub_resource type="CircleShape2D" id=18]
radius = 20.0151

[sub_resource type="CircleShape2D" id=19]
radius = 50.3711

[sub_resource type="CircleShape2D" id=20]
radius = 65.4916

[sub_resource type="CircleShape2D" id=21]
radius = 187.308

[sub_resource type="GDScript" id=22]
script/source = "extends CollisionPolygon2D

onready var parent = get_parent()

export var shard_poly_colors = Color(1,1,1,0.5)
export var is_complex = false

var tween = Tween.new()
var poly_color = Polygon2D.new()
var is_added : bool = false

onready var line_points: Array



# Called when the node enters the scene tree for the first time.
func _ready():
	randomize()
	poly_color.polygon = polygon
	poly_color.color = shard_poly_colors
	poly_color.color.a = 0.7
	add_child(poly_color)
	
	var poly_line = get_polygon()

	for i in range(0 , poly_line.size()):
		#draw_line(poly_line[i-1] , poly_line[i], OutLine , Width)
		line_points.append(poly_line[i])
	line_points.append(poly_line[0])
	line_points.append(poly_line[1])


func _draw():
	draw_polyline(line_points,Color(1,1,1,0.7),1)


func explode():
	var points = polygon
	var delaunay_points_one = Geometry.triangulate_polygon(points)
	
	if not delaunay_points_one:
		print(\"serious error occurred no delaunay points found\")
	#find the midlle point of each triangle and add it to points
	for index in len(delaunay_points_one) / 3:
		var shard_pool_one = PoolVector2Array()
		var Ox = 0
		var Oy = 0
		for n in range(3):
			shard_pool_one.append(points[delaunay_points_one[(index * 3) + n]])
			Ox += shard_pool_one[n].x
			Oy += shard_pool_one[n].y
		points.append(Vector2(Ox / 3, Oy / 3))
	
	var delaunay_points_two = Geometry.triangulate_delaunay_2d(points)
	
	if is_complex:
		delaunay_points_two = delaunay_points_one
	
	for index in len(delaunay_points_two) / 3:
		var shard_pool = PoolVector2Array()
		
		# loop over the three points in our triangle
		for n in range(3):
			shard_pool.append(points[delaunay_points_two[(index * 3) + n]])
		
		var shard_polygon = Polygon2D.new()
		var shard_collision_polygon = CollisionPolygon2D.new()
		var shard_rigidbody = RigidBody2D.new()

		
		shard_polygon.polygon = shard_pool
		shard_collision_polygon.polygon = shard_pool
		shard_rigidbody.applied_torque = round(rand_range(-1,1))
		shard_rigidbody.mass = 0.4
		shard_rigidbody.gravity_scale = 0.2
		shard_rigidbody.set_collision_layer_bit(0,false)
		shard_rigidbody.set_collision_mask_bit(0,false)
		shard_rigidbody.set_collision_layer_bit(2,true)
		shard_rigidbody.set_collision_mask_bit(2,true)
		shard_rigidbody.add_child(shard_polygon)
		shard_rigidbody.add_child(shard_collision_polygon)
		
		shard_polygon.color = shard_poly_colors
		
#		add_child(shard_rigidbody)
#		shard_polygon.add_child(tween)
		call_deferred(\"add_child\", shard_rigidbody)
		if is_added == false:
			call_deferred(\"add_child\", tween)
			is_added = true
		
		tween.interpolate_property(self, \"modulate\", Color(1,1,1,1), Color(1,1,1,0), 0.5, tween.TRANS_LINEAR, tween.EASE_OUT_IN)
		shard_rigidbody.apply_central_impulse(Vector2(5,0).rotated(deg2rad(rand_range(0,360))))
	
	yield(get_tree().create_timer(1), \"timeout\")
	tween.start()
	yield(get_tree().create_timer(0.5), \"timeout\")
	for ch in get_children():
		ch.queue_free()

func destroy_the_glass():
	for n in range(20):
		parent.set_collision_layer_bit(n, false)
		parent.set_collision_mask_bit(n, false)
	poly_color.hide()
	
	#Deleting the pinjoint conected to the glass before deleting the glass itself
	var twodots = \"../\"
	for child in get_parent().get_parent().get_children():
		if child.is_in_group(\"GlassPinJoint\"):
			if child.get_node_a() == twodots + get_parent().name or child.get_node_b() == twodots + get_parent().name:
				child.queue_free()
	
	explode()
	yield(get_tree().create_timer(5), \"timeout\")
	parent.queue_free()


func _on_RigidBody2D2_body_entered(body):
#	print(body.get_collision_layer_bit(9))
#	print(body.get_linear_velocity().length())
#	print(body.name)
	if parent.get_linear_velocity().length() > 40:
		destroy_the_glass()
	elif body.get_collision_layer_bit(9) == true && body.get_collision_mask_bit(9) == true:
		destroy_the_glass()
	elif body.get_collision_layer_bit(9) == true && body.get_linear_velocity().length() > 80:
		destroy_the_glass()
	elif body.get_collision_mask_bit(9) == true:
		destroy_the_glass()
"

[sub_resource type="GDScript" id=23]
script/source = "extends CollisionPolygon2D

onready var parent = get_parent()

export var shard_poly_colors = Color(1,1,1,0.5)
export var is_complex = false

var tween = Tween.new()
var poly_color = Polygon2D.new()
var is_added : bool = false

onready var line_points: Array



# Called when the node enters the scene tree for the first time.
func _ready():
	randomize()
	poly_color.polygon = polygon
	poly_color.color = shard_poly_colors
	poly_color.color.a = 0.7
	add_child(poly_color)
	
	var poly_line = get_polygon()

	for i in range(0 , poly_line.size()):
		#draw_line(poly_line[i-1] , poly_line[i], OutLine , Width)
		line_points.append(poly_line[i])
	line_points.append(poly_line[0])
	line_points.append(poly_line[1])


func _draw():
	draw_polyline(line_points,Color(1,1,1,0.7),1)


func explode():
	var points = polygon
	var delaunay_points_one = Geometry.triangulate_polygon(points)
	
	if not delaunay_points_one:
		print(\"serious error occurred no delaunay points found\")
	#find the midlle point of each triangle and add it to points
	for index in len(delaunay_points_one) / 3:
		var shard_pool_one = PoolVector2Array()
		var Ox = 0
		var Oy = 0
		for n in range(3):
			shard_pool_one.append(points[delaunay_points_one[(index * 3) + n]])
			Ox += shard_pool_one[n].x
			Oy += shard_pool_one[n].y
		points.append(Vector2(Ox / 3, Oy / 3))
	
	var delaunay_points_two = Geometry.triangulate_delaunay_2d(points)
	
	if is_complex:
		delaunay_points_two = delaunay_points_one
	
	for index in len(delaunay_points_two) / 3:
		var shard_pool = PoolVector2Array()
		
		# loop over the three points in our triangle
		for n in range(3):
			shard_pool.append(points[delaunay_points_two[(index * 3) + n]])
		
		var shard_polygon = Polygon2D.new()
		var shard_collision_polygon = CollisionPolygon2D.new()
		var shard_rigidbody = RigidBody2D.new()

		
		shard_polygon.polygon = shard_pool
		shard_collision_polygon.polygon = shard_pool
		shard_rigidbody.applied_torque = round(rand_range(-1,1))
		shard_rigidbody.mass = 0.4
		shard_rigidbody.gravity_scale = 0.2
		shard_rigidbody.set_collision_layer_bit(0,false)
		shard_rigidbody.set_collision_mask_bit(0,false)
		shard_rigidbody.set_collision_layer_bit(2,true)
		shard_rigidbody.set_collision_mask_bit(2,true)
		shard_rigidbody.add_child(shard_polygon)
		shard_rigidbody.add_child(shard_collision_polygon)
		
		shard_polygon.color = shard_poly_colors
		
#		add_child(shard_rigidbody)
#		shard_polygon.add_child(tween)
		call_deferred(\"add_child\", shard_rigidbody)
		if is_added == false:
			call_deferred(\"add_child\", tween)
			is_added = true
		
		tween.interpolate_property(self, \"modulate\", Color(1,1,1,1), Color(1,1,1,0), 0.5, tween.TRANS_LINEAR, tween.EASE_OUT_IN)
		shard_rigidbody.apply_central_impulse(Vector2(5,0).rotated(deg2rad(rand_range(0,360))))
	
	yield(get_tree().create_timer(1), \"timeout\")
	tween.start()
	yield(get_tree().create_timer(0.5), \"timeout\")
	for ch in get_children():
		ch.queue_free()

func destroy_the_glass():
	for n in range(20):
		parent.set_collision_layer_bit(n, false)
		parent.set_collision_mask_bit(n, false)
	poly_color.hide()
	
	#Deleting the pinjoint conected to the glass before deleting the glass itself
	var twodots = \"../\"
	for child in get_parent().get_parent().get_children():
		if child.is_in_group(\"GlassPinJoint\"):
			if child.get_node_a() == twodots + get_parent().name or child.get_node_b() == twodots + get_parent().name:
				child.queue_free()
	
	explode()
	yield(get_tree().create_timer(5), \"timeout\")
	parent.queue_free()


func _on_RigidBody2D2_body_entered(body):
#	print(body.get_collision_layer_bit(9))
#	print(body.get_linear_velocity().length())
#	print(body.name)
	if parent.get_linear_velocity().length() > 40:
		destroy_the_glass()
	elif body.get_collision_layer_bit(9) == true && body.get_collision_mask_bit(9) == true:
		destroy_the_glass()
	elif body.get_collision_layer_bit(9) == true && body.get_linear_velocity().length() > 80:
		destroy_the_glass()
	elif body.get_collision_mask_bit(9) == true:
		destroy_the_glass()
"

[sub_resource type="RectangleShape2D" id=24]
extents = Vector2( 1, 1 )

[sub_resource type="GDScript" id=25]
script/source = "extends CollisionPolygon2D

onready var parent = get_parent()

export var shard_poly_colors = Color(1,1,1,0.5)
export var is_complex = false

var tween = Tween.new()
var poly_color = Polygon2D.new()
var is_added : bool = false

onready var line_points: Array



# Called when the node enters the scene tree for the first time.
func _ready():
	randomize()
	poly_color.polygon = polygon
	poly_color.color = shard_poly_colors
	poly_color.color.a = 0.7
	add_child(poly_color)
	
	var poly_line = get_polygon()

	for i in range(0 , poly_line.size()):
		#draw_line(poly_line[i-1] , poly_line[i], OutLine , Width)
		line_points.append(poly_line[i])
	line_points.append(poly_line[0])
	line_points.append(poly_line[1])


func _draw():
	draw_polyline(line_points,Color(1,1,1,0.7),1)


func explode():
	var points = polygon
	var delaunay_points_one = Geometry.triangulate_polygon(points)
	
	if not delaunay_points_one:
		print(\"serious error occurred no delaunay points found\")
	#find the midlle point of each triangle and add it to points
	for index in len(delaunay_points_one) / 3:
		var shard_pool_one = PoolVector2Array()
		var Ox = 0
		var Oy = 0
		for n in range(3):
			shard_pool_one.append(points[delaunay_points_one[(index * 3) + n]])
			Ox += shard_pool_one[n].x
			Oy += shard_pool_one[n].y
		points.append(Vector2(Ox / 3, Oy / 3))
	
	var delaunay_points_two = Geometry.triangulate_delaunay_2d(points)
	
	if is_complex:
		delaunay_points_two = delaunay_points_one
	
	for index in len(delaunay_points_two) / 3:
		var shard_pool = PoolVector2Array()
		
		# loop over the three points in our triangle
		for n in range(3):
			shard_pool.append(points[delaunay_points_two[(index * 3) + n]])
		
		var shard_polygon = Polygon2D.new()
		var shard_collision_polygon = CollisionPolygon2D.new()
		var shard_rigidbody = RigidBody2D.new()

		
		shard_polygon.polygon = shard_pool
		shard_collision_polygon.polygon = shard_pool
		shard_rigidbody.applied_torque = round(rand_range(-1,1))
		shard_rigidbody.mass = 0.4
		shard_rigidbody.gravity_scale = 0.2
		shard_rigidbody.set_collision_layer_bit(0,false)
		shard_rigidbody.set_collision_mask_bit(0,false)
		shard_rigidbody.set_collision_layer_bit(2,true)
		shard_rigidbody.set_collision_mask_bit(2,true)
		shard_rigidbody.add_child(shard_polygon)
		shard_rigidbody.add_child(shard_collision_polygon)
		
		shard_polygon.color = shard_poly_colors
		
#		add_child(shard_rigidbody)
#		shard_polygon.add_child(tween)
		call_deferred(\"add_child\", shard_rigidbody)
		if is_added == false:
			call_deferred(\"add_child\", tween)
			is_added = true
		
		tween.interpolate_property(self, \"modulate\", Color(1,1,1,1), Color(1,1,1,0), 0.5, tween.TRANS_LINEAR, tween.EASE_OUT_IN)
		shard_rigidbody.apply_central_impulse(Vector2(5,0).rotated(deg2rad(rand_range(0,360))))
	
	yield(get_tree().create_timer(1), \"timeout\")
	tween.start()
	yield(get_tree().create_timer(0.5), \"timeout\")
	for ch in get_children():
		ch.queue_free()

func destroy_the_glass():
	for n in range(20):
		parent.set_collision_layer_bit(n, false)
		parent.set_collision_mask_bit(n, false)
	poly_color.hide()
	
	#Deleting the pinjoint conected to the glass before deleting the glass itself
	var twodots = \"../\"
	for child in get_parent().get_parent().get_children():
		if child.is_in_group(\"GlassPinJoint\"):
			if child.get_node_a() == twodots + get_parent().name or child.get_node_b() == twodots + get_parent().name:
				child.queue_free()
	
	explode()
	yield(get_tree().create_timer(5), \"timeout\")
	parent.queue_free()


func _on_RigidBody2D2_body_entered(body):
#	print(body.get_collision_layer_bit(9))
#	print(body.get_linear_velocity().length())
#	print(body.name)
	if parent.get_linear_velocity().length() > 40:
		destroy_the_glass()
	elif body.get_collision_layer_bit(9) == true && body.get_collision_mask_bit(9) == true:
		destroy_the_glass()
	elif body.get_collision_layer_bit(9) == true && body.get_linear_velocity().length() > 80:
		destroy_the_glass()
	elif body.get_collision_mask_bit(9) == true:
		destroy_the_glass()
"

[sub_resource type="RectangleShape2D" id=26]
extents = Vector2( 1, 15 )

[sub_resource type="RectangleShape2D" id=27]
extents = Vector2( 8, 8 )

[node name="level_001" type="Node"]

[node name="BG_polygons" type="Node2D" parent="."]
z_index = -10
script = ExtResource( 3 )

[node name="blank" type="Polygon2D" parent="BG_polygons"]
color = Color( 0.192157, 0.192157, 0.192157, 1 )
polygon = PoolVector2Array( -174.087, 64.4289, -216.899, 40.6448, -126.519, -361.307, 66.1326, -420.768, 565.599, -363.686, 546.572, -563.472, 965.173, -791.8, 1217.28, -90.168, 515.653, 54.9152 )

[node name="light" type="Polygon2D" parent="BG_polygons"]
color = Color( 0.156863, 0.156863, 0.156863, 1 )
polygon = PoolVector2Array( -176.45, 43.8044, -115.639, -39.6342, -42.0995, 48.0471, 7.39804, -59.4332, 144.577, 46.6329, 116.292, -58.0189, 194.074, -96.2027, 107.807, -161.257, 171.447, -173.984, 99.3219, -222.068, 189.832, -248.938, 229.43, -199.44, 315.697, -248.938, 400.549, -199.44, 500.959, -247.524, 566.012, -171.156, 513.687, -123.073, 592.883, -53.7763, 636.723, -0.0361938, 54.0671, 67.8461 )

[node name="light2" type="Polygon2D" parent="BG_polygons"]
color = Color( 0.156863, 0.156863, 0.156863, 1 )
polygon = PoolVector2Array( -233.018, 15.5201, -136.852, -32.5631, -173.621, -219.239, -94.4254, -169.742, -111.396, -316.82, -22.3004, -261.666, -22.3004, -408.744, 51.2386, -280.05, 151.648, -352.175, 240.743, -257.423, 370.851, -323.891, 409.035, -247.524, 571.669, -328.134, 580.155, -222.068, 650.865, -239.038, 590.054, -108.931, 666.422, -169.742, 656.522, -380.46, -76.0406, -507.739, -288.173, -39.6342 )

[node name="dark" type="Polygon2D" parent="BG_polygons"]
color = Color( 0.133333, 0.133333, 0.133333, 1 )
polygon = PoolVector2Array( 212.459, 35.3192, 95.0793, -33.9773, 48.4102, 55.1182, -47.7563, -24.0778, -114.224, 56.5323, -152.408, -7.10724, -240.089, -49.5337, -122.71, -104.688, -129.781, -230.553, -54.8274, -226.31, -49.1705, -339.447, 18.7117, -294.193, 117.707, -387.531, 167.204, -253.18, 269.028, -316.82, 335.496, -258.837, 336.91, -347.933, 32.8539, -458.241, -179.278, -328.134, -305.143, 28.2481, -169.766, 62.1892, 127.219, 67.8461 )

[node name="dark2" type="Polygon2D" parent="BG_polygons"]
color = Color( 0.133333, 0.133333, 0.133333, 1 )
polygon = PoolVector2Array( 203.586, -55.1906, 111.662, -106.102, 176.716, -155.6, 110.248, -185.298, 125.804, -217.825, 122.976, -254.595, 165.402, -212.168, 226.214, -250.352, 261.569, -199.44, 417.132, -240.453, 432.689, -198.026, 565.625, -116.002, 509.056, -86.3033 )

[node name="CanvasLayer" type="CanvasLayer" parent="."]
layer = 111

[node name="Game_HUD" parent="CanvasLayer" instance=ExtResource( 9 )]

[node name="Shader" parent="." instance=ExtResource( 13 )]

[node name="player" parent="." instance=ExtResource( 7 )]

[node name="exit_portal" parent="." instance=ExtResource( 5 )]
position = Vector2( 742.969, -437.558 )
rotation = 1.04941
next_level = 2

[node name="Ground" type="Node2D" parent="."]

[node name="StaticBodyRect" type="StaticBody2D" parent="Ground"]
collision_layer = 68
collision_mask = 64
script = ExtResource( 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 1.19895, 37.6722 )
shape = SubResource( 1 )

[node name="CollisionShape2D2" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 178.719, -30.358 )
rotation = 1.44034
shape = SubResource( 2 )

[node name="CollisionShape2D3" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 155.469, -146.608 )
rotation = 1.2974
shape = SubResource( 3 )

[node name="CollisionShape2D4" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( -186.583, -22.1849 )
rotation = -1.46433
shape = SubResource( 2 )

[node name="CollisionShape2D5" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( -155.26, -141.953 )
rotation = -1.14998
shape = SubResource( 3 )

[node name="CollisionShape2D6" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( -99.9872, -247.733 )
rotation = -1.01356
shape = SubResource( 3 )

[node name="CollisionShape2D7" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 68.3042, -334 )
rotation = -2.22046
shape = SubResource( 4 )

[node name="CollisionShape2D9" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 209.695, -220.019 )
rotation = -3.17684
shape = SubResource( 4 )

[node name="CollisionShape2D10" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 191.26, -275.395 )
rotation = -3.17684
shape = SubResource( 4 )

[node name="CollisionShape2D11" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 360.374, -206.998 )
rotation = -3.17684
shape = SubResource( 5 )

[node name="CollisionShape2D13" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 535.019, -117.696 )
rotation = -1.69279
shape = SubResource( 6 )

[node name="CollisionShape2D14" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 613.222, -195.899 )
rotation = -1.69279
shape = SubResource( 6 )

[node name="CollisionShape2D15" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 841.607, -66.4431 )
rotation = -3.32054
shape = SubResource( 7 )

[node name="CollisionShape2D16" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 1039.16, -372.875 )
rotation = -1.92216
shape = SubResource( 7 )

[node name="CollisionShape2D12" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 432.328, -284.319 )
rotation = -3.17684
shape = SubResource( 5 )

[node name="CollisionShape2D17" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 704.659, -253.413 )
rotation = -4.24081
shape = SubResource( 5 )

[node name="CollisionShape2D18" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 785.747, -1274.97 )
rotation = -4.9399
shape = SubResource( 8 )

[node name="CollisionShape2D19" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 763.517, -474.057 )
rotation = -4.9399
shape = SubResource( 9 )

[node name="CollisionShape2D20" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 649.936, -573.422 )
rotation = -3.62927
shape = SubResource( 8 )

[node name="CollisionShape2D21" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 616.263, -489.237 )
rotation = -5.68549
shape = SubResource( 10 )

[node name="CollisionShape2D22" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 358.938, -199.661 )
rotation = -4.119
shape = SubResource( 11 )

[node name="CollisionShape2D23" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 454.074, -287.067 )
rotation = -4.119
shape = SubResource( 11 )

[node name="CollisionShape2D24" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 568.238, -36.1446 )
rotation = -4.119
shape = SubResource( 11 )

[node name="CollisionShape2D25" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 791.569, -162.77 )
rotation = -4.119
shape = SubResource( 12 )

[node name="CollisionShape2D26" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 742.072, -61.6539 )
rotation = -2.74914
shape = SubResource( 13 )

[node name="CollisionShape2D27" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 804.043, -305.533 )
rotation = -2.74914
shape = SubResource( 14 )

[node name="CollisionShape2D28" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 1023.52, -141.558 )
rotation = -3.5264
shape = SubResource( 15 )

[node name="CollisionShape2D29" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 1088.27, -329.078 )
rotation = -3.14629
shape = SubResource( 16 )

[node name="CollisionShape2D30" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 990.722, -397.19 )
rotation = -2.78741
shape = SubResource( 17 )

[node name="CollisionShape2D31" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( 825.065, -456.894 )
rotation = -0.498639
shape = SubResource( 17 )

[node name="CollisionShape2D8" type="CollisionShape2D" parent="Ground/StaticBodyRect"]
position = Vector2( -25.0338, -344.607 )
rotation = -0.770441
shape = SubResource( 3 )

[node name="StaticBodyCircle" type="StaticBody2D" parent="Ground"]
position = Vector2( 66.0712, -157.155 )
collision_layer = 68
collision_mask = 68
script = ExtResource( 6 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="Ground/StaticBodyCircle"]
position = Vector2( 71.6967, -59.9254 )
shape = SubResource( 18 )

[node name="CollisionShape2D2" type="CollisionShape2D" parent="Ground/StaticBodyCircle"]
position = Vector2( 45.4152, -120.061 )
shape = SubResource( 18 )

[node name="CollisionShape2D3" type="CollisionShape2D" parent="Ground/StaticBodyCircle"]
position = Vector2( 524.719, -128.079 )
shape = SubResource( 19 )

[node name="CollisionShape2D4" type="CollisionShape2D" parent="Ground/StaticBodyCircle"]
position = Vector2( 574.609, 10.0101 )
shape = SubResource( 20 )

[node name="CollisionShape2D5" type="CollisionShape2D" parent="Ground/StaticBodyCircle"]
position = Vector2( 1011.1, -96.7771 )
shape = SubResource( 20 )

[node name="CollisionShape2D6" type="CollisionShape2D" parent="Ground/StaticBodyCircle"]
position = Vector2( 952.369, -295.668 )
shape = SubResource( 20 )

[node name="CollisionShape2D7" type="CollisionShape2D" parent="Ground/StaticBodyCircle"]
position = Vector2( 796.435, -587.634 )
shape = SubResource( 21 )

[node name="StaticBodypoly" type="StaticBody2D" parent="Ground"]
collision_layer = 68
collision_mask = 68
script = ExtResource( 2 )

[node name="FG_polygons" type="Node2D" parent="."]
z_index = 10
script = ExtResource( 3 )

[node name="black" type="Polygon2D" parent="FG_polygons"]
color = Color( 0, 0, 0, 1 )
polygon = PoolVector2Array( -195.572, 39.5866, 187.641, 36.7549, 172.539, -90.6681, 136.672, -215.259, 261.264, -222.81, 287.692, -202.989, 518.941, -213.372, 565.191, 134.918, -236.158, 131.142 )

[node name="black2" type="Polygon2D" parent="FG_polygons"]
color = Color( 0, 0, 0, 1 )
polygon = PoolVector2Array( -195.78, 37.4866, -175.757, -101.337, -72.9743, -293.554, 24.4689, -388.327, 116.573, -273.531, 599.785, -285.545, 567.749, -401.676, 56.5051, -484.436, -182.431, -399.006, -339.942, 89.5453, -187.771, 128.256 )

[node name="black3" type="Polygon2D" parent="FG_polygons"]
color = Color( 0, 0, 0, 1 )
polygon = PoolVector2Array( 658.338, -177.78, 775.937, -395.16, 770.591, -434.359, 738.519, -402.287, 492.631, -580.466, 503.322, -357.742, 604.884, -284.688, 620.92, -163.526 )

[node name="black4" type="Polygon2D" parent="FG_polygons"]
color = Color( 0, 0, 0, 1 )
polygon = PoolVector2Array( 554.785, -523.449, 859.472, -680.247, 622.493, -737.265, 433.622, -641.048 )

[node name="black5" type="Polygon2D" parent="FG_polygons"]
color = Color( 0, 0, 0, 1 )
polygon = PoolVector2Array( 941.435, -649.957, 1137.43, -117.199, 504.894, 2.18115, 545.876, 87.7075, 1310.27, -56.6182, 1025.18, -715.883 )

[node name="Objects" type="Node2D" parent="."]

[node name="BOXS" type="Node2D" parent="Objects"]

[node name="BigBox_1" parent="Objects/BOXS" instance=ExtResource( 16 )]
position = Vector2( -363.979, -155.228 )

[node name="SmallBox_1" parent="Objects/BOXS" instance=ExtResource( 18 )]
position = Vector2( -364.801, -171.263 )

[node name="Glasses" type="Node2D" parent="Objects"]

[node name="static" type="Node2D" parent="Objects/Glasses"]

[node name="Glass1" parent="Objects/Glasses/static" instance=ExtResource( 17 )]
position = Vector2( -512.117, -267.572 )

[node name="CollisionPolygon2D" parent="Objects/Glasses/static/Glass1" index="0"]
polygon = PoolVector2Array( -35.1419, 0.427876, -17.2879, -2.90195, 14.8243, -8.89096, 34.1766, -12.5002, 33.5453, -9.86945, 16.027, -6.59912, -16.6042, -0.507484, -34.9078, 2.90945 )
script = SubResource( 22 )
shard_poly_colors = Color( 1, 1, 1, 0.5 )

[node name="rigid" type="Node2D" parent="Objects/Glasses"]

[node name="Glass1" parent="Objects/Glasses/rigid" instance=ExtResource( 17 )]
position = Vector2( -541.015, -200.263 )
collision_layer = 524874
collision_mask = 524810
mode = 0

[node name="CollisionPolygon2D" parent="Objects/Glasses/rigid/Glass1" index="0"]
position = Vector2( -0.285736, 3.36252 )
polygon = PoolVector2Array( -4, -16, 4, -16, 4, 8, -4, 8 )
script = SubResource( 23 )
shard_poly_colors = Color( 1, 1, 1, 0.5 )

[node name="enemies" type="Node2D" parent="."]

[node name="dash_enemies" type="Node2D" parent="enemies"]

[node name="Pow_enemy" parent="enemies/dash_enemies" instance=ExtResource( 14 )]
position = Vector2( -550.303, -48.6362 )

[node name="spikes" type="Node2D" parent="enemies"]

[node name="Spikes" parent="enemies/spikes" instance=ExtResource( 15 )]
position = Vector2( -498.281, -10.294 )
Width = 6

[node name="lezer" type="Node2D" parent="enemies"]

[node name="LezerRay" parent="enemies/lezer" instance=ExtResource( 12 )]
position = Vector2( -552.859, -105.296 )

[node name="Complex_Objects" type="Node2D" parent="."]
position = Vector2( 344.703, -478.01 )

[node name="LezerOnRoop" type="Node2D" parent="Complex_Objects"]
position = Vector2( -610.473, 571.495 )

[node name="StaticBody2D" type="StaticBody2D" parent="Complex_Objects/LezerOnRoop"]
position = Vector2( -275, 68 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="Complex_Objects/LezerOnRoop/StaticBody2D"]
shape = SubResource( 24 )

[node name="PinJoint2D" type="PinJoint2D" parent="Complex_Objects/LezerOnRoop" groups=[
"GlassPinJoint",
]]
position = Vector2( -274.996, 67.9883 )
node_a = NodePath("../StaticBody2D")
node_b = NodePath("../Glass")

[node name="Glass" parent="Complex_Objects/LezerOnRoop" instance=ExtResource( 17 )]
position = Vector2( -275.003, 68.0077 )
mode = 0

[node name="CollisionPolygon2D" parent="Complex_Objects/LezerOnRoop/Glass" index="0"]
polygon = PoolVector2Array( -0.996887, -0.304535, -0.751465, 19.4075, 0.711914, 19.3828, 0.971863, -0.312347 )
script = SubResource( 25 )
shard_poly_colors = Color( 1, 1, 1, 0.5 )

[node name="PinJoint2D2" type="PinJoint2D" parent="Complex_Objects/LezerOnRoop" groups=[
"GlassPinJoint",
]]
position = Vector2( -275.013, 86.6691 )
node_a = NodePath("../Glass")
node_b = NodePath("../RigidBody2D")

[node name="RigidBody2D" type="RigidBody2D" parent="Complex_Objects/LezerOnRoop"]
position = Vector2( -275.06, 100.813 )
collision_layer = 6
collision_mask = 6

[node name="CollisionShape2D" type="CollisionShape2D" parent="Complex_Objects/LezerOnRoop/RigidBody2D"]
shape = SubResource( 26 )

[node name="Polygon2D" type="Polygon2D" parent="Complex_Objects/LezerOnRoop/RigidBody2D"]
color = Color( 0.105882, 0.105882, 0.105882, 1 )
polygon = PoolVector2Array( -0.99202, -14.9907, -0.837952, 14.8974, 0.89444, 14.8974, 0.89444, -15.1833 )

[node name="PinJoint2D3" type="PinJoint2D" parent="Complex_Objects/LezerOnRoop"]
position = Vector2( -275.043, 114.964 )
node_a = NodePath("../RigidBody2D")
node_b = NodePath("../RigidBody2D2")

[node name="RigidBody2D2" type="RigidBody2D" parent="Complex_Objects/LezerOnRoop"]
position = Vector2( -275.028, 122.335 )
collision_layer = 6
collision_mask = 6

[node name="CollisionShape2D" type="CollisionShape2D" parent="Complex_Objects/LezerOnRoop/RigidBody2D2"]
shape = SubResource( 27 )

[node name="Polygon2D" type="Polygon2D" parent="Complex_Objects/LezerOnRoop/RigidBody2D2"]
color = Color( 0.0705882, 0.0705882, 0.0705882, 1 )
polygon = PoolVector2Array( -7.97997, -7.94757, -7.93577, 8.00653, 7.97413, 8.05072, 7.92994, -7.99176 )

[node name="LezerRay" parent="Complex_Objects/LezerOnRoop/RigidBody2D2" instance=ExtResource( 12 )]
rotation = 1.5708
cast_to = Vector2( 1000, 0 )

[node name="btn_and_door" type="Node2D" parent="Complex_Objects"]

[node name="PhysicBTN2D2" parent="Complex_Objects/btn_and_door" instance=ExtResource( 4 )]
position = Vector2( -834.904, 654.467 )

[node name="CheckPoints" type="Node2D" parent="."]
__meta__ = {
"_editor_description_": ""
}

[node name="CheckPoint" parent="CheckPoints" instance=ExtResource( 10 )]
position = Vector2( -458.205, -388.333 )

[node name="Cage" parent="." instance=ExtResource( 11 )]

[editable path="player"]

[editable path="Objects/Glasses/static/Glass1"]

[editable path="Objects/Glasses/rigid/Glass1"]

[editable path="Complex_Objects/LezerOnRoop/Glass"]
